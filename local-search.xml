<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>博客介绍</title>
    <link href="/posts/36423e12/"/>
    <url>/posts/36423e12/</url>
    
    <content type="html"><![CDATA[<h1 id="友链申请"><a href="#友链申请" class="headerlink" title="友链申请"></a>友链申请</h1><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># 请在下方评论区中以该格式评论</span><br><span class="hljs-attr">name:</span>   <span class="hljs-comment"># 你的名称</span><br><span class="hljs-attr">link:</span>   <span class="hljs-comment"># 网站链接</span><br><span class="hljs-attr">avatar:</span> <span class="hljs-comment"># 头像（可选）</span><br><span class="hljs-attr">descr:</span>  <span class="hljs-comment"># 描述（可选）</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>【Obsolete】 C#集合：ObjectPool&lt;T&gt;</title>
    <link href="/posts/defc3041/"/>
    <url>/posts/defc3041/</url>
    
    <content type="html"><![CDATA[<p><code>ObjectPool&lt;T&gt;</code>表示一个对象池，任何实现了<code>IReusableObject</code>接口并且定义了无参构造函数的对象 都可以被<code>ObjectPool&lt;T&gt;</code>回收与分配。其内部维护一个可变长的<code>Stack</code>（LIFO）。</p><a id="more"></a><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs cs"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 可重用对象接口</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title">IReusableObject</span><br>&#123;<br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 回调：对象被分配/重用</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">OnAllocated</span>(<span class="hljs-params"></span>)</span>;<br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 回调：对象被释放/回收</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;destroy&quot;&gt;</span>是否销毁对象<span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">OnFree</span>(<span class="hljs-params"><span class="hljs-built_in">bool</span> destroy</span>)</span>;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><code class="hljs cs"><span class="hljs-keyword">using</span> System;<br><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 表示一个对象池</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;typeparam name=&quot;T&quot;&gt;</span><span class="hljs-doctag">&lt;/typeparam&gt;</span></span><br>public class ObjectPool&lt;T&gt; where T : IReusableObject, new()<br>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">const</span> <span class="hljs-built_in">int</span> MinGrow = <span class="hljs-number">4</span>;<br><br>    <span class="hljs-keyword">private</span> T[] m_Pool;<br>    <span class="hljs-keyword">private</span> <span class="hljs-built_in">int</span> m_MaxObjCount;<br>    <span class="hljs-keyword">private</span> <span class="hljs-built_in">int</span> m_Size;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">int</span> MaxObjectCount =&gt; m_MaxObjCount;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">int</span> ObjectCount =&gt; m_Size;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">ObjectPool</span>(<span class="hljs-params"><span class="hljs-built_in">int</span> maxObjectCount</span>) : <span class="hljs-title">this</span>(<span class="hljs-params"><span class="hljs-number">0</span>, maxObjectCount</span>)</span> &#123; &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">ObjectPool</span>(<span class="hljs-params"><span class="hljs-built_in">int</span> capacity, <span class="hljs-built_in">int</span> maxObjectCount</span>)</span><br><span class="hljs-function"></span>    &#123;<br>        <span class="hljs-keyword">if</span> (capacity &lt; <span class="hljs-number">0</span>)<br>        &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> ArgumentOutOfRangeException(<span class="hljs-keyword">nameof</span>(capacity));<br>        &#125;<br><br>        m_Pool = capacity == <span class="hljs-number">0</span> ? Array.Empty&lt;T&gt;() : <span class="hljs-keyword">new</span> T[capacity];<br>        m_MaxObjCount = maxObjectCount &gt;= capacity ? maxObjectCount : <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> ArgumentOutOfRangeException(<span class="hljs-keyword">nameof</span>(maxObjectCount));<br>        m_Size = <span class="hljs-number">0</span>;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> T <span class="hljs-title">Allocate</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function"></span>    &#123;<br>        <span class="hljs-keyword">if</span> (m_Size == <span class="hljs-number">0</span>)<br>        &#123;<br>            T newObj = <span class="hljs-keyword">new</span> T();<br>            newObj.OnAllocated();<br>            <span class="hljs-keyword">return</span> newObj;<br>        &#125;<br><br>        <span class="hljs-built_in">int</span> i = --m_Size;<br>        T result = m_Pool[i];<br>        result.OnAllocated();<br>        m_Pool[i] = <span class="hljs-literal">default</span>;<br>        <span class="hljs-keyword">return</span> result;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Free</span>(<span class="hljs-params">T obj</span>)</span><br><span class="hljs-function"></span>    &#123;<br>        obj.OnFree(m_Size == m_MaxObjCount);<br><br>        <span class="hljs-keyword">if</span> (m_Size &lt; m_MaxObjCount)<br>        &#123;<br>            <span class="hljs-keyword">if</span> (m_Size == m_Pool.Length)<br>            &#123;<br>                Grow(MinGrow);<br>            &#125;<br><br>            m_Pool[m_Size++] = obj;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Fill</span>(<span class="hljs-params"><span class="hljs-built_in">int</span> count</span>)</span><br><span class="hljs-function"></span>    &#123;<br>        <span class="hljs-keyword">if</span> (count &lt;= <span class="hljs-number">0</span>)<br>        &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> ArgumentOutOfRangeException(<span class="hljs-keyword">nameof</span>(count));<br>        &#125;<br><br>        <span class="hljs-keyword">if</span> (m_Size + count &gt; m_Pool.Length)<br>        &#123;<br>            Grow(count);<br>        &#125;<br><br>        <span class="hljs-keyword">while</span> (count-- &gt; <span class="hljs-number">0</span> &amp;&amp; m_Size &lt; m_MaxObjCount)<br>        &#123;<br>            m_Pool[m_Size++] = <span class="hljs-keyword">new</span> T();<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Clear</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function"></span>    &#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> i = <span class="hljs-number">0</span>; i &lt; m_Size; i++)<br>        &#123;<br>            m_Pool[i].OnFree(<span class="hljs-literal">true</span>);<br>            m_Pool[i] = <span class="hljs-literal">default</span>;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Grow</span>(<span class="hljs-params"><span class="hljs-built_in">int</span> grow</span>)</span><br><span class="hljs-function"></span>    &#123;<br>        <span class="hljs-built_in">int</span> newCapacity = m_Pool.Length &lt;&lt; <span class="hljs-number">1</span>;<br><br>        <span class="hljs-keyword">if</span> (newCapacity &lt; m_Pool.Length + grow)<br>        &#123;<br>            newCapacity = m_Pool.Length + grow;<br>        &#125;<br><br>        <span class="hljs-keyword">if</span> (newCapacity &gt; m_MaxObjCount)<br>        &#123;<br>            newCapacity = m_MaxObjCount;<br>        &#125;<br><br>        T[] array = <span class="hljs-keyword">new</span> T[newCapacity];<br>        Array.Copy(m_Pool, <span class="hljs-number">0</span>, array, <span class="hljs-number">0</span>, m_Size);<br>        m_Pool = array;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>编程</category>
      
      <category>C#</category>
      
    </categories>
    
    
    <tags>
      
      <tag>C#</tag>
      
      <tag>数据结构</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【Obsolete】 C#集合：PriorityQueue&lt;T&gt;</title>
    <link href="/posts/7f9c5592/"/>
    <url>/posts/7f9c5592/</url>
    
    <content type="html"><![CDATA[<p><code>PriorityQueue&lt;T&gt;</code>是一个优先级队列，与<code>Java</code>中的实现方式类似，内部维护了一个小顶堆。</p><p><code>Enqueue()</code>与<code>Dequeue()</code>的时间复杂度大部分情况为<code>O(log n)</code>，<code>Contains()</code>的时间复杂度为<code>O(n)</code>，<code>Peek()</code>的时间复杂度为<code>O(1)</code>。</p><p><em>注：元素越小，其优先级越高。</em></p><a id="more"></a><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br></pre></td><td class="code"><pre><code class="hljs cs"><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">using</span> System.Collections;<br><span class="hljs-keyword">using</span> System.Collections.Generic;<br><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 表示根据对象优先级排列的队列</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;typeparam name=&quot;T&quot;&gt;</span>元素对象的类型<span class="hljs-doctag">&lt;/typeparam&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">PriorityQueue</span>&lt;<span class="hljs-title">T</span>&gt; : <span class="hljs-title">IEnumerable</span>&lt;<span class="hljs-title">T</span>&gt;, <span class="hljs-title">IReadOnlyCollection</span>&lt;<span class="hljs-title">T</span>&gt;<br>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">const</span> <span class="hljs-built_in">int</span> DefaultCapacity = <span class="hljs-number">4</span>;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">const</span> <span class="hljs-built_in">int</span> MinGrow = <span class="hljs-number">4</span>;<br><br>    <span class="hljs-keyword">private</span> T[] m_Array;<br>    <span class="hljs-keyword">private</span> <span class="hljs-built_in">int</span> m_Size;<br>    <span class="hljs-keyword">private</span> <span class="hljs-built_in">int</span> m_Version;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">readonly</span> IComparer&lt;T&gt; m_Comparer;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">int</span> Count =&gt; m_Size;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">PriorityQueue</span>(<span class="hljs-params"></span>) : <span class="hljs-title">this</span>(<span class="hljs-params"><span class="hljs-number">0</span>, Comparer&lt;T&gt;.Default</span>)</span> &#123; &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">PriorityQueue</span>(<span class="hljs-params">Comparison&lt;T&gt; comparison</span>) : <span class="hljs-title">this</span>(<span class="hljs-params"><span class="hljs-number">0</span>, Comparer&lt;T&gt;.Create(comparison</span>))</span> &#123; &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">PriorityQueue</span>(<span class="hljs-params">IComparer&lt;T&gt; comparer</span>) : <span class="hljs-title">this</span>(<span class="hljs-params"><span class="hljs-number">0</span>, comparer</span>)</span> &#123; &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">PriorityQueue</span>(<span class="hljs-params"><span class="hljs-built_in">int</span> capacity</span>) : <span class="hljs-title">this</span>(<span class="hljs-params">capacity, Comparer&lt;T&gt;.Default</span>)</span> &#123; &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">PriorityQueue</span>(<span class="hljs-params"><span class="hljs-built_in">int</span> capacity, Comparison&lt;T&gt; comparison</span>) : <span class="hljs-title">this</span>(<span class="hljs-params">capacity, Comparer&lt;T&gt;.Create(comparison</span>))</span> &#123; &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">PriorityQueue</span>(<span class="hljs-params"><span class="hljs-built_in">int</span> capacity, IComparer&lt;T&gt; comparer</span>)</span><br><span class="hljs-function"></span>    &#123;<br>        <span class="hljs-keyword">if</span> (capacity &lt; <span class="hljs-number">0</span>)<br>        &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> ArgumentOutOfRangeException(<span class="hljs-keyword">nameof</span>(capacity));<br>        &#125;<br><br>        m_Array = capacity == <span class="hljs-number">0</span> ? Array.Empty&lt;T&gt;() : <span class="hljs-keyword">new</span> T[capacity];<br>        m_Size = <span class="hljs-number">0</span>;<br>        m_Version = <span class="hljs-number">0</span>;<br>        m_Comparer = comparer ?? <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> ArgumentNullException(<span class="hljs-keyword">nameof</span>(comparer));<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">PriorityQueue</span>(<span class="hljs-params">IEnumerable&lt;T&gt; collections</span>) : <span class="hljs-title">this</span>(<span class="hljs-params">collections, Comparer&lt;T&gt;.Default</span>)</span> &#123; &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">PriorityQueue</span>(<span class="hljs-params">IEnumerable&lt;T&gt; collections, Comparison&lt;T&gt; comparison</span>) : <span class="hljs-title">this</span>(<span class="hljs-params">collections, Comparer&lt;T&gt;.Create(comparison</span>))</span> &#123; &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">PriorityQueue</span>(<span class="hljs-params">IEnumerable&lt;T&gt; collections, IComparer&lt;T&gt; comparer</span>)</span><br><span class="hljs-function"></span>    &#123;<br>        <span class="hljs-keyword">if</span> (collections == <span class="hljs-literal">null</span>)<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> ArgumentNullException(<span class="hljs-keyword">nameof</span>(collections));<br><br>        m_Array = <span class="hljs-keyword">new</span> T[DefaultCapacity];<br>        m_Size = <span class="hljs-number">0</span>;<br>        m_Version = <span class="hljs-number">0</span>;<br>        m_Comparer = comparer ?? <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> ArgumentNullException(<span class="hljs-keyword">nameof</span>(comparer));<br><br>        <span class="hljs-keyword">foreach</span> (T item <span class="hljs-keyword">in</span> collections)<br>        &#123;<br>            Enqueue(item);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Clear</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function"></span>    &#123;<br>        Array.Clear(m_Array, <span class="hljs-number">0</span>, m_Size);<br><br>        m_Size = <span class="hljs-number">0</span>;<br>        m_Version++;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-built_in">bool</span> <span class="hljs-title">Contains</span>(<span class="hljs-params">T item</span>)</span><br><span class="hljs-function"></span>    &#123;<br>        <span class="hljs-keyword">return</span> Contains(item, EqualityComparer&lt;T&gt;.Default);<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-built_in">bool</span> <span class="hljs-title">Contains</span>(<span class="hljs-params">T item, IEqualityComparer&lt;T&gt; comparer</span>)</span><br><span class="hljs-function"></span>    &#123;<br>        <span class="hljs-keyword">if</span> (comparer == <span class="hljs-literal">null</span>)<br>        &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> ArgumentNullException(<span class="hljs-keyword">nameof</span>(comparer));<br>        &#125;<br><br>        <span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> i = <span class="hljs-number">0</span>; i &lt; m_Size; i++)<br>        &#123;<br>            <span class="hljs-keyword">if</span> (comparer.Equals(item, m_Array[i]))<br>            &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">CopyTo</span>(<span class="hljs-params">T[] array, <span class="hljs-built_in">int</span> arrayIndex</span>)</span><br><span class="hljs-function"></span>    &#123;<br>        <span class="hljs-keyword">if</span> (m_Size &gt; <span class="hljs-number">0</span>)<br>        &#123;<br>            Array.Copy(m_Array, <span class="hljs-number">0</span>, array, arrayIndex, m_Size);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> T <span class="hljs-title">Dequeue</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function"></span>    &#123;<br>        <span class="hljs-keyword">if</span> (m_Size == <span class="hljs-number">0</span>)<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> InvalidOperationException(<span class="hljs-string">&quot;队列长度为0&quot;</span>);<br><br>        <span class="hljs-built_in">int</span> i = --m_Size;<br>        m_Version++;<br><br>        T first = m_Array[<span class="hljs-number">0</span>];<br><br>        <span class="hljs-keyword">if</span> (i == <span class="hljs-number">0</span>)<br>        &#123;<br>            m_Array[<span class="hljs-number">0</span>] = <span class="hljs-literal">default</span>;<br>            <span class="hljs-keyword">return</span> first;<br>        &#125;<br><br>        T last = m_Array[i];<br>        m_Array[i] = <span class="hljs-literal">default</span>;<br>        SiftDown(last, <span class="hljs-number">0</span>);<br>        <span class="hljs-keyword">return</span> first;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> T <span class="hljs-title">Peek</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function"></span>    &#123;<br>        <span class="hljs-keyword">return</span> m_Size &gt; <span class="hljs-number">0</span> ? m_Array[<span class="hljs-number">0</span>] : <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> InvalidOperationException(<span class="hljs-string">&quot;队列长度为0&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Enqueue</span>(<span class="hljs-params">T item</span>)</span><br><span class="hljs-function"></span>    &#123;<br>        <span class="hljs-keyword">if</span> (m_Size == m_Array.Length)<br>        &#123;<br>            Grow();<br>        &#125;<br><br>        <span class="hljs-built_in">int</span> i = m_Size++;<br>        m_Version++;<br><br>        <span class="hljs-keyword">if</span> (i == <span class="hljs-number">0</span>)<br>        &#123;<br>            m_Array[<span class="hljs-number">0</span>] = item;<br>        &#125;<br>        <span class="hljs-keyword">else</span><br>        &#123;<br>            SiftUp(item, i);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 注：无法保证元素的顺序</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> T[] <span class="hljs-title">ToArray</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function"></span>    &#123;<br>        <span class="hljs-keyword">if</span> (m_Size == <span class="hljs-number">0</span>)<br>        &#123;<br>            <span class="hljs-keyword">return</span> Array.Empty&lt;T&gt;();<br>        &#125;<br><br>        T[] result = <span class="hljs-keyword">new</span> T[m_Size];<br>        Array.Copy(m_Array, <span class="hljs-number">0</span>, result, <span class="hljs-number">0</span>, m_Size);<br>        <span class="hljs-keyword">return</span> result;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">TrimExcess</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function"></span>    &#123;<br>        <span class="hljs-built_in">int</span> threshold = (<span class="hljs-built_in">int</span>)(m_Array.Length * <span class="hljs-number">0.9f</span>);<br><br>        <span class="hljs-keyword">if</span> (m_Size &lt; threshold)<br>        &#123;<br>            <span class="hljs-keyword">if</span> (m_Size == <span class="hljs-number">0</span>)<br>            &#123;<br>                m_Array = Array.Empty&lt;T&gt;();<br>            &#125;<br>            <span class="hljs-keyword">else</span><br>            &#123;<br>                T[] array = <span class="hljs-keyword">new</span> T[m_Size];<br>                Array.Copy(m_Array, <span class="hljs-number">0</span>, array, <span class="hljs-number">0</span>, m_Size);<br>                m_Array = array;<br>            &#125;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">SiftUp</span>(<span class="hljs-params">T item, <span class="hljs-built_in">int</span> i</span>)</span><br><span class="hljs-function"></span>    &#123;<br>        <span class="hljs-comment">//小顶堆</span><br>        <span class="hljs-keyword">while</span> (i &gt; <span class="hljs-number">0</span>)<br>        &#123;<br>            <span class="hljs-built_in">int</span> parentIndex = (i - <span class="hljs-number">1</span>) &gt;&gt; <span class="hljs-number">1</span>;<br>            T parent = m_Array[parentIndex];<br><br>            <span class="hljs-keyword">if</span> (m_Comparer.Compare(item, parent) &gt;= <span class="hljs-number">0</span>)<br>                <span class="hljs-keyword">break</span>;<br><br>            m_Array[i] = parent;<br>            i = parentIndex;<br>        &#125;<br>        m_Array[i] = item;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">SiftDown</span>(<span class="hljs-params">T item, <span class="hljs-built_in">int</span> i</span>)</span><br><span class="hljs-function"></span>    &#123;<br>        <span class="hljs-built_in">int</span> half = m_Size &gt;&gt; <span class="hljs-number">1</span>;<br><br>        <span class="hljs-comment">//小顶堆</span><br>        <span class="hljs-keyword">while</span> (i &lt; half)<br>        &#123;<br>            <span class="hljs-built_in">int</span> childIndex = (i &lt;&lt; <span class="hljs-number">1</span>) + <span class="hljs-number">1</span>;<br>            <span class="hljs-built_in">int</span> rightIndex = childIndex + <span class="hljs-number">1</span>;<br><br>            T child = m_Array[childIndex];<br><br>            <span class="hljs-keyword">if</span> ((rightIndex &lt; m_Size) &amp;&amp; (m_Comparer.Compare(child, m_Array[rightIndex]) &gt;= <span class="hljs-number">0</span>))<br>                child = m_Array[childIndex = rightIndex];<br><br>            <span class="hljs-keyword">if</span> (m_Comparer.Compare(item, child) &lt; <span class="hljs-number">0</span>)<br>                <span class="hljs-keyword">break</span>;<br><br>            m_Array[i] = child;<br>            i = childIndex;<br>        &#125;<br><br>        m_Array[i] = item;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Grow</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function"></span>    &#123;<br>        <span class="hljs-built_in">int</span> newCapacity = m_Array.Length &lt;&lt; <span class="hljs-number">1</span>;<br><br>        <span class="hljs-keyword">if</span> (newCapacity &lt; m_Array.Length + MinGrow)<br>        &#123;<br>            newCapacity = m_Array.Length + MinGrow;<br>        &#125;<br><br>        T[] array = <span class="hljs-keyword">new</span> T[newCapacity];<br>        Array.Copy(m_Array, <span class="hljs-number">0</span>, array, <span class="hljs-number">0</span>, m_Size);<br>        m_Array = array;<br>    &#125;<br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 获取迭代器</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 注：迭代无法保证元素的顺序</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> Enumerator <span class="hljs-title">GetEnumerator</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function"></span>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> Enumerator(<span class="hljs-keyword">this</span>);<br>    &#125;<br><br>    IEnumerator&lt;T&gt; IEnumerable&lt;T&gt;.GetEnumerator()<br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> Enumerator(<span class="hljs-keyword">this</span>);<br>    &#125;<br><br>    IEnumerator IEnumerable.GetEnumerator()<br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> Enumerator(<span class="hljs-keyword">this</span>);<br>    &#125;<br><br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">struct</span> Enumerator : IEnumerator&lt;T&gt;<br>    &#123;<br>        <span class="hljs-keyword">private</span> <span class="hljs-keyword">readonly</span> PriorityQueue&lt;T&gt; m_Queue;<br>        <span class="hljs-keyword">private</span> <span class="hljs-keyword">readonly</span> <span class="hljs-built_in">int</span> m_Version;<br>        <span class="hljs-keyword">private</span> <span class="hljs-built_in">int</span> m_Index; <span class="hljs-comment">// -1 = not started, -2 = ended/disposed</span><br>        <span class="hljs-keyword">private</span> T m_Current;<br><br>        <span class="hljs-keyword">public</span> T Current<br>        &#123;<br>            <span class="hljs-keyword">get</span><br>            &#123;<br>                <span class="hljs-keyword">switch</span> (m_Index)<br>                &#123;<br>                    <span class="hljs-keyword">case</span> <span class="hljs-number">-1</span>:<br>                        <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> InvalidOperationException(<span class="hljs-string">&quot;迭代没有开始&quot;</span>);<br>                    <span class="hljs-keyword">case</span> <span class="hljs-number">-2</span>:<br>                        <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> InvalidOperationException(<span class="hljs-string">&quot;迭代器已经被释放&quot;</span>);<br>                    <span class="hljs-literal">default</span>:<br>                        <span class="hljs-keyword">return</span> m_Current;<br>                &#125;<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">internal</span> <span class="hljs-title">Enumerator</span>(<span class="hljs-params">PriorityQueue&lt;T&gt; queue</span>)</span><br><span class="hljs-function"></span>        &#123;<br>            m_Queue = queue;<br>            m_Version = queue.m_Version;<br>            m_Index = <span class="hljs-number">-1</span>;<br>            m_Current = <span class="hljs-literal">default</span>;<br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Dispose</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function"></span>        &#123;<br>            m_Index = <span class="hljs-number">-2</span>;<br>            m_Current = <span class="hljs-literal">default</span>;<br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-built_in">bool</span> <span class="hljs-title">MoveNext</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function"></span>        &#123;<br>            <span class="hljs-keyword">if</span> (m_Version != m_Queue.m_Version)<br>                <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> InvalidOperationException(<span class="hljs-string">&quot;迭代时修改集合元素&quot;</span>);<br><br>            <span class="hljs-keyword">if</span> (m_Index == <span class="hljs-number">-2</span>)<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br><br>            m_Index++;<br><br>            <span class="hljs-keyword">if</span> (m_Index == m_Queue.m_Size)<br>            &#123;<br>                m_Index = <span class="hljs-number">-2</span>;<br>                m_Current = <span class="hljs-literal">default</span>;<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>            &#125;<br><br>            m_Current = m_Queue.m_Array[m_Index];<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Reset</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function"></span>        &#123;<br>            <span class="hljs-keyword">if</span> (m_Version != m_Queue.m_Version)<br>                <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> InvalidOperationException(<span class="hljs-string">&quot;迭代时修改集合元素&quot;</span>);<br><br>            m_Index = <span class="hljs-number">-1</span>;<br>            m_Current = <span class="hljs-literal">default</span>;<br>        &#125;<br><br>        <span class="hljs-built_in">object</span> IEnumerator.Current =&gt; Current;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>编程</category>
      
      <category>C#</category>
      
    </categories>
    
    
    <tags>
      
      <tag>C#</tag>
      
      <tag>数据结构</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【Obsolete】 C#集合：NibbleArray</title>
    <link href="/posts/970c2a35/"/>
    <url>/posts/970c2a35/</url>
    
    <content type="html"><![CDATA[<p><code>NibbleArray</code>是一个压缩数组，每一个元素的大小为4bit。</p><a id="more"></a><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><code class="hljs cs"><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">using</span> System.Collections;<br><span class="hljs-keyword">using</span> System.Collections.Generic;<br><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 元素大小为4位的数组</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">NibbleArray</span> : <span class="hljs-title">IReadOnlyList</span>&lt;<span class="hljs-title">byte</span>&gt;, <span class="hljs-title">IEnumerable</span>&lt;<span class="hljs-title">byte</span>&gt;<br>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">readonly</span> <span class="hljs-built_in">byte</span>[] m_Data;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">int</span> Length =&gt; m_Data.Length &lt;&lt; <span class="hljs-number">1</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">byte</span> <span class="hljs-keyword">this</span>[<span class="hljs-built_in">int</span> index]<br>    &#123;<br>        <span class="hljs-comment">//index为偶数，保存在后4位；index为奇数保存在前4位</span><br>        <span class="hljs-keyword">get</span> =&gt; (<span class="hljs-built_in">byte</span>)((m_Data[index &gt;&gt; <span class="hljs-number">1</span>] &gt;&gt; ((index &amp; <span class="hljs-number">1</span>) &lt;&lt; <span class="hljs-number">2</span>)) &amp; <span class="hljs-number">15</span>);<br>        <span class="hljs-keyword">set</span> =&gt; m_Data[index &gt;&gt; <span class="hljs-number">1</span>] = (<span class="hljs-built_in">byte</span>)((m_Data[index &gt;&gt; <span class="hljs-number">1</span>] &amp; (<span class="hljs-number">15</span> &lt;&lt; ((~index &amp; <span class="hljs-number">1</span>) &lt;&lt; <span class="hljs-number">2</span>))) | ((<span class="hljs-keyword">value</span> &amp; <span class="hljs-number">15</span>) &lt;&lt; ((index &amp; <span class="hljs-number">1</span>) &lt;&lt; <span class="hljs-number">2</span>)));<br>    &#125;<br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 创建一个<span class="hljs-doctag">&lt;see cref=&quot;NibbleArray&quot;/&gt;</span>的实例</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;length&quot;&gt;</span>数组长度，必须为偶数<span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;exception cref=&quot;ArgumentOutOfRangeException&quot;&gt;</span><span class="hljs-doctag">&lt;paramref name=&quot;length&quot;/&gt;</span>为负数<span class="hljs-doctag">&lt;/exception&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;exception cref=&quot;ArgumentException&quot;&gt;</span><span class="hljs-doctag">&lt;paramref name=&quot;length&quot;/&gt;</span>为奇数<span class="hljs-doctag">&lt;/exception&gt;</span></span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">NibbleArray</span>(<span class="hljs-params"><span class="hljs-built_in">int</span> length</span>)</span><br><span class="hljs-function"></span>    &#123;<br>        <span class="hljs-keyword">if</span> (length &lt; <span class="hljs-number">0</span>)<br>        &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> ArgumentOutOfRangeException(<span class="hljs-keyword">nameof</span>(length), <span class="hljs-keyword">nameof</span>(NibbleArray) + <span class="hljs-string">&quot;的长度必须为非负数&quot;</span>);<br>        &#125;<br><br>        <span class="hljs-keyword">if</span> ((length &amp; <span class="hljs-number">1</span>) == <span class="hljs-number">1</span>)<br>        &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> ArgumentException(<span class="hljs-keyword">nameof</span>(NibbleArray) + <span class="hljs-string">&quot;的长度必须为偶数&quot;</span>, <span class="hljs-keyword">nameof</span>(length));<br>        &#125;<br><br>        m_Data = <span class="hljs-keyword">new</span> <span class="hljs-built_in">byte</span>[length &gt;&gt; <span class="hljs-number">1</span>];<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Clear</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function"></span>    &#123;<br>        Array.Clear(m_Data, <span class="hljs-number">0</span>, m_Data.Length);<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> IEnumerator&lt;<span class="hljs-built_in">byte</span>&gt; <span class="hljs-title">GetEnumerator</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function"></span>    &#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> i = <span class="hljs-number">0</span>; i &lt; m_Data.Length; i++)<br>        &#123;<br>            <span class="hljs-function"><span class="hljs-keyword">yield</span> <span class="hljs-title">return</span> (<span class="hljs-params"><span class="hljs-built_in">byte</span></span>)(<span class="hljs-params">m_Data[i] &amp; <span class="hljs-number">15</span></span>)</span>;<span class="hljs-comment">//偶数index</span><br>            <span class="hljs-function"><span class="hljs-keyword">yield</span> <span class="hljs-title">return</span> (<span class="hljs-params"><span class="hljs-built_in">byte</span></span>)(<span class="hljs-params">(m_Data[i] &gt;&gt; <span class="hljs-number">4</span></span>) &amp; 15)</span>;<span class="hljs-comment">//奇数index</span><br>        &#125;<br>    &#125;<br><br>    <span class="hljs-built_in">int</span> IReadOnlyCollection&lt;<span class="hljs-built_in">byte</span>&gt;.Count =&gt; Length;<br><br>    IEnumerator IEnumerable.GetEnumerator()<br>    &#123;<br>        <span class="hljs-keyword">return</span> GetEnumerator();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>编程</category>
      
      <category>C#</category>
      
    </categories>
    
    
    <tags>
      
      <tag>C#</tag>
      
      <tag>数据结构</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【Obsolete】 计数原理，排列组合，概率论初步</title>
    <link href="/posts/d80405e4/"/>
    <url>/posts/d80405e4/</url>
    
    <content type="html"><![CDATA[<blockquote><p>计数原理，排列组合，概率论初步；简单整理点概念和公式。</p></blockquote><a id="more"></a><h2 id="计数原理"><a href="#计数原理" class="headerlink" title="计数原理"></a>计数原理</h2><h3 id="乘法原理"><a href="#乘法原理" class="headerlink" title="乘法原理"></a>乘法原理</h3><p>如果完成一件事需要$n$个步骤，第$1$步有$m_1$种不同的方法，第$2$步有$m_2$种不同的方法，……，第$n$步有$m_n$种不同方法，那么完成这件事共有</p><script type="math/tex; mode=display">N=m_1m_2...m_n</script><p>种不同方法。</p><p><strong><span style="color:red;">注意：必须依次通过每一步骤，才算完成一件事！</span></strong></p><h3 id="加法原理"><a href="#加法原理" class="headerlink" title="加法原理"></a>加法原理</h3><p>如果完成一件事有$n$类办法，在第$1$类办法中有$m_1$种不同的方法，在第$2$类办法中有$m_2$种不同的方法，……，在第$n$类办法中有$m_n$种不同的方法，那么完成这件事共有</p><script type="math/tex; mode=display">N=m_1+m_2+...+m_n</script><p>种不同方法。</p><hr><h2 id="排列组合"><a href="#排列组合" class="headerlink" title="排列组合"></a>排列组合</h2><h3 id="排列（Permutation-Arrangement）"><a href="#排列（Permutation-Arrangement）" class="headerlink" title="排列（Permutation / Arrangement）"></a>排列（Permutation / Arrangement）</h3><ul><li><p>一般地，从$n$个<strong>不同元素</strong>中取出$m(m \le n)$个元素，按照<strong>一定的次序</strong>排成一列，叫做：从$n$个不同元素中取出$m$个元素的一个排列。</p></li><li><p>从$n$个<strong>不同元素</strong>中取出$m(m \le n)$个元素的所有排列的个数叫做：从$n$个不同元素中取出$m$个元素的排列数，用符号$P^m_n$或$A^m_n$表示。</p></li></ul><p>根据乘法原理，可知从$n$个元素中取出的第$m(m \le n)$个元素有$n-m+1$种可能，于是一共有</p><script type="math/tex; mode=display">n(n-1)(n-2)...(n-m+1)={n!\over(n-m)!}</script><p>种可能。</p><p>因此，</p><script type="math/tex; mode=display">A_n^m={n!\over(n-m)!}</script><p>为排列数公式。</p><p>另外，$n$个不同元素全部取出的一个排列，叫$n$个元素的一个全排列。此时$m=n$，有</p><script type="math/tex; mode=display">A_n^n={n!\over 0!}=n!</script><h3 id="组合（Combination）"><a href="#组合（Combination）" class="headerlink" title="组合（Combination）"></a>组合（Combination）</h3><ul><li><p>一般地，从$n$个<strong>不同元素</strong>中取出$m(m \le n)$个元素，组成一组，叫做：从$n$个不同元素中取出$m$个元素的一个组合。</p></li><li><p>从$n$个<strong>不同元素</strong>中取出$m(m \le n)$个元素的所有组合的个数叫做：从$n$个不同元素中取出$m$个元素的组合数，用符号$C^m_n$表示。</p></li></ul><p>从$n$个不同元素中取出$m$个元素的组合数，可以看做，用从$n$个不同元素中取出$m$个元素的排列数，除以，$m$个不同元素的全排列数，即</p><script type="math/tex; mode=display">C_n^m={A_n^m \over A_m^m}=\frac{n!}{m!(n-m)!}</script><p>其中，$m \le n$。这个公式叫组合数公式。</p><blockquote><p>排列与元素的次序有关，而组合与元素的次序无关。</p></blockquote><h4 id="性质"><a href="#性质" class="headerlink" title="性质"></a>性质</h4><script type="math/tex; mode=display">C_n^m=C_n^{n-m}</script><script type="math/tex; mode=display">C_n^m+C_n^{m-1}=C_m^{n+1}</script><script type="math/tex; mode=display">C_n^0=1</script><h3 id="排列恒等式"><a href="#排列恒等式" class="headerlink" title="排列恒等式"></a>排列恒等式</h3><script type="math/tex; mode=display">A^m_n=(n-m+1)A^{m-1}_n</script><script type="math/tex; mode=display">A^m_n={n\over n-m} A^m_{n-1}</script><script type="math/tex; mode=display">A^m_n=nA^{m-1}_{n-1}</script><script type="math/tex; mode=display">nA^n_n=A^{n+1}_{n+1}-A^n_n</script><script type="math/tex; mode=display">A^m_{n+1}=A^m_n+mA^{m-1}_n</script><script type="math/tex; mode=display">1!+2\cdot 2!+3\cdot 3!+...+n\cdot n!=(n+1)!-1</script><h3 id="组合恒等式"><a href="#组合恒等式" class="headerlink" title="组合恒等式"></a>组合恒等式</h3><script type="math/tex; mode=display">\begin{aligned}C_n^m&=\frac{n-m+1}{m}C_n^{m-1}\\C_n^m&=\frac{n}{n-m}C_{n-1}^{m}\\C_n^m&=\frac{n}{m}C_{n-1}^{m-1}\end{aligned}</script><h3 id="排列数与组合数的关系"><a href="#排列数与组合数的关系" class="headerlink" title="排列数与组合数的关系"></a>排列数与组合数的关系</h3><script type="math/tex; mode=display">A_n^m=m!C_n^m</script><hr><h2 id="概率论初步"><a href="#概率论初步" class="headerlink" title="概率论初步"></a>概率论初步</h2><ul><li><p><strong>概率论：</strong>研究随机现象数量规律的数学分支。</p></li><li><p><strong>试验：</strong>在概率论中，掷骰子、转硬币……都叫试验。</p></li><li><p><strong>基本事件：</strong>一次试验可能出现的结果。</p></li><li><p><strong>随机事件：</strong>试验的结果，简称事件。包括基本事件。用大写字母$A$、$B$等表示。</p></li><li><p><strong>随机现象：</strong>对于在一定条件下可能出现也可能不出现，且有统计规律性的现象。</p></li></ul><p>随机事件$A$出现的概率记作$P(A)$。</p><h3 id="古典概型"><a href="#古典概型" class="headerlink" title="古典概型"></a>古典概型</h3><h4 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h4><ol><li>一次试验可能出现的基本事件只有有限个。</li><li>每个基本事件出现的可能性相等。</li></ol><h4 id="事件出现的概率"><a href="#事件出现的概率" class="headerlink" title="事件出现的概率"></a>事件出现的概率</h4><p>在古典概型中，事件$A$出现的概率定义为</p><script type="math/tex; mode=display">P(A)=\frac{\text{事件}A\text{所包含的基本事件数}}{\text{试验中所有的基本事件数}}</script><p>用集合语言表示，设$\omega_1$，$\omega_2$，…，$\omega_n$表示所有的基本事件，基本事件的集合记为</p><script type="math/tex; mode=display">\Omega=\\{ \omega_1, \omega_2,...,\omega_n \\}</script><p>则</p><script type="math/tex; mode=display">P(A)=\frac{A\text{所包含的}\omega\text{的个数}}{\Omega\text{中元素}\omega\text{的总个数}}</script><blockquote><p>$\Omega$既表示基本事件的集合，又可以看做是一个特殊的随机事件，它包含了所有的基本事件，因此它是必然事件。</p></blockquote><p>我们把试验后必定出现的事件叫做<strong>必然事件</strong>，记作$\Omega$，把不可能出现的事件叫做<strong>不可能事件</strong>，记作$\emptyset$。</p><p>注意：</p><ol><li>不可能事件的概率为零，即$P(\emptyset)=0$</li><li>必然事件的概率为$1$，即$P(\Omega)=1$</li><li>对任意随机事件$E$，有$0\le P(E)\le 1$</li><li>若$\Omega=\{ \omega_1, \omega_2,…,\omega_n \}$，则$P(\omega_1)+P(\omega_2)+…+P(\omega_n)=1$</li></ol><h4 id="对立事件"><a href="#对立事件" class="headerlink" title="对立事件"></a>对立事件</h4><p>设$E$和$F$是两个随机事件，若$E$和$F$满足下列条件：</p><ol><li>$E\cup F=\Omega$</li><li>$E\cap F=\emptyset$</li></ol><p>则$E$和$F$叫做对立事件。</p><p>在任何一次试验中，事件$A$要么出现，要么不出现，如果把事件$A$不出现记作事件$\overline{A}$，那么它们互为对立事件，且</p><script type="math/tex; mode=display">P(A)+P(\overline{A})=1</script><p>其中$\overline{A}$也可以用集合语言表示为</p><script type="math/tex; mode=display">\overline{A}=\\{\omega\ |\ \omega \in \Omega,\ \omega \notin A \\}=\complement_\Omega A</script><h3 id="频率与概率"><a href="#频率与概率" class="headerlink" title="频率与概率"></a>频率与概率</h3><h4 id="频率"><a href="#频率" class="headerlink" title="频率"></a>频率</h4><p>对于随机事件$E$，如果在$n$次试验中出现了$m(0 \le m \le n)$次，那么$m$称为事件$E$出现的频数，$\frac{m}{n}$称为事件$E$出现的频率。</p><h4 id="频率稳定性（随机现象的统计规律性）"><a href="#频率稳定性（随机现象的统计规律性）" class="headerlink" title="频率稳定性（随机现象的统计规律性）"></a>频率稳定性（随机现象的统计规律性）</h4><ol><li>在大量试验中，事件出现的频率与其概率很接近。</li><li>当试验次数无限增大时，事件出现的频率与概率相差较大的的可能性趋近于$0$。</li></ol><blockquote><p>频率稳定性说明随机事件出现的可能性大小是随机事件本身固有的，是不随人们的意志转移的。</p></blockquote><p><strong><span style="color:red;">注意：在通常意义下，概率不是试验次数无限增大时频率的极限！！！</span></strong></p><h4 id="大数定律"><a href="#大数定律" class="headerlink" title="大数定律"></a>大数定律</h4><p>频率在大数次试验中稳定于某一常数（概率）。</p><blockquote><p>在实际中可以把频率作为概率（的估计值）来应用。</p><p>频率也叫经验概率，计算频率通常是为了估计概率。</p></blockquote><h3 id="几何概型"><a href="#几何概型" class="headerlink" title="*几何概型"></a>*几何概型</h3><p>在几何概型中，事件$A$出现的概率定义为</p><script type="math/tex; mode=display">P(A)=\frac{A\text{出现区域或区间的几何度量}}{\text{所考察的整个区域或区间的几何度量}}</script><ul><li><strong>几何度量：</strong>区间长度或图形面积。</li></ul><h3 id="事件-A-与事件-B-的和"><a href="#事件-A-与事件-B-的和" class="headerlink" title="事件$A$与事件$B$的和"></a>事件$A$与事件$B$的和</h3><p>设$A$、$B$为两个随机事件，把 <strong>事件$A$与事件$B$至少有一个出现</strong> 叫做事件$A$与事件$B$的和。</p><p>它也是一个随机事件，记作$A\cup B$。也可以说成：事件$A$或事件$B$出现。</p><h3 id="事件-A-与事件-B-的积"><a href="#事件-A-与事件-B-的积" class="headerlink" title="事件$A$与事件$B$的积"></a>事件$A$与事件$B$的积</h3><p>设$A$、$B$为两个随机事件，把 <strong>事件$A$与事件$B$同时出现</strong> 叫做事件$A$与事件$B$的积。</p><p>它也是一个随机事件，记作$A\cup B$或$AB$。</p><h3 id="互不相容事件（互斥事件）"><a href="#互不相容事件（互斥事件）" class="headerlink" title="互不相容事件（互斥事件）"></a>互不相容事件（互斥事件）</h3><p>不可能同时出现的两个事件叫做互不相容事件或互斥事件。</p><p>相互对立的两个事件是互不相容的。</p><h3 id="概率加法公式"><a href="#概率加法公式" class="headerlink" title="概率加法公式"></a>概率加法公式</h3><p>一般地，事件$A$与事件$B$的和的概率等于事件$A$出现的概率，加上事件$B$出现的概率，减去事件$A$、$B$同时出现的概率，即</p><script type="math/tex; mode=display">P(A\cup B)=P(A)+P(B)-P(AB)</script><p>若$A$与$B$是互不相容事件，那么事件$A$与事件$B$的和的概率等于它们的概率和，即</p><script type="math/tex; mode=display">P(A\cup B)=P(A)+P(B)</script><h3 id="独立事件积的概率公式"><a href="#独立事件积的概率公式" class="headerlink" title="独立事件积的概率公式"></a>独立事件积的概率公式</h3><p>对于事件$A$及$B$，如果</p><script type="math/tex; mode=display">P(AB)=P(A)\cdot P(B)</script><p>那么称事件$A$与事件$B$是统计独立的，简称独立的，也称$A$与$B$相互独立。</p><p>同时，上式为独立事件积的概率公式。</p><p>根据定义，可以证明：如果事件$A$与事件$B$相互独立，$A$的对立事件为$\overline{A}$、$B$的对立事件为$\overline{B}$，那么$\overline{A}$与$B$、$A$与$\overline{B}$、$\overline{A}$与$\overline{B}$也相互独立。</p>]]></content>
    
    
    <categories>
      
      <category>高考</category>
      
      <category>数学</category>
      
    </categories>
    
    
    <tags>
      
      <tag>计数原理</tag>
      
      <tag>排列组合</tag>
      
      <tag>概率论</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>樱花动漫爬虫</title>
    <link href="/posts/b6dc2c/"/>
    <url>/posts/b6dc2c/</url>
    
    <content type="html"><![CDATA[<h3 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h3><p><strong>下载的视频文件默认保存在代码文件所在目录下的</strong><code>animations\$&#123;animation_name&#125;\$&#123;index&#125;.mp4</code>。</p><h4 id="其中"><a href="#其中" class="headerlink" title="其中"></a>其中</h4><ul><li><code>animation_name</code>是动漫的全名</li><li><code>index</code>是对应的集数</li></ul><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p>模仿樱花动漫官网的逻辑，查询到目标动漫的播放网页。在该网页的<code>html</code>文件中，匹配<code>(/playdata/(\d+)/(\d+)(\.)js(\?)(\d+)(\.)(\d+))</code>，找到保存了该动漫下载路径列表的<code>js</code>文件，通过字符串操作，将文件内容转为<code>json</code>，并解析，获取视频列表。最后根据输入，得到对应的下载路径，并请求下载。</p><h3 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">@Author       : Jin Yuhan</span><br><span class="hljs-string">@Date         : 2020-04-19 12:18:49</span><br><span class="hljs-string">@LastEditors  : Jin Yuhan</span><br><span class="hljs-string">@LastEditTime : 2020-07-10 22:17:14</span><br><span class="hljs-string">@Description  : 搜索 &amp; 下载动漫</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><br><span class="hljs-keyword">from</span> urllib.parse <span class="hljs-keyword">import</span> quote<br><span class="hljs-keyword">from</span> bs4 <span class="hljs-keyword">import</span> BeautifulSoup<br><span class="hljs-keyword">import</span> requests, sys, re, json, os<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">exit</span>(<span class="hljs-params">msg: <span class="hljs-built_in">str</span></span>):</span><br>    print(msg)<br>    os.system(<span class="hljs-string">&#x27;pause&#x27;</span>)<br>    sys.exit()<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_request</span>(<span class="hljs-params">url, timeout=<span class="hljs-number">20</span></span>) -&gt; requests.Response:</span><br>    print(<span class="hljs-string">&#x27;请求：%s&#x27;</span> % url)<br>    <br>    <span class="hljs-keyword">try</span>:<br>        r = requests.get(url, timeout=timeout)<br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        print(e)<br>        exit(<span class="hljs-string">&#x27;请求失败！&#x27;</span>)<br>    <span class="hljs-keyword">return</span> r<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">search</span>() -&gt; BeautifulSoup:</span><br>    sw = quote(<span class="hljs-built_in">input</span>(<span class="hljs-string">&#x27;搜索: &#x27;</span>).encode(<span class="hljs-string">&#x27;gb2312&#x27;</span>))<br>    r = get_request(<span class="hljs-string">&#x27;http://www.imomoe.in/search.asp?searchword=&#x27;</span> + sw)<br>    <span class="hljs-keyword">return</span> BeautifulSoup(r.content.decode(<span class="hljs-string">&quot;gbk&quot;</span>).encode(<span class="hljs-string">&quot;utf-8&quot;</span>), <span class="hljs-string">&#x27;html.parser&#x27;</span>)<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_anim_list</span>(<span class="hljs-params">soup: BeautifulSoup</span>) -&gt; list:</span><br>    divs = soup.find_all(<span class="hljs-string">&#x27;div&#x27;</span>, attrs=&#123;<span class="hljs-string">&#x27;class&#x27;</span>: <span class="hljs-string">&#x27;pics&#x27;</span>&#125;)<br>    <br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> (<span class="hljs-built_in">len</span>(divs) == <span class="hljs-number">2</span>):<br>        exit(<span class="hljs-string">&#x27;无法获取动漫列表！&#x27;</span>)<br>    <br>    anim_list = divs[<span class="hljs-number">0</span>].ul<br>    result = []<br>    <br>    <span class="hljs-keyword">for</span> li <span class="hljs-keyword">in</span> anim_list.find_all(<span class="hljs-string">&#x27;li&#x27;</span>):<br>        a = li.h2.a<br>        title = a[<span class="hljs-string">&#x27;title&#x27;</span>]<br>        num = a[<span class="hljs-string">&#x27;href&#x27;</span>].replace(<span class="hljs-string">&#x27;/view/&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>).replace(<span class="hljs-string">&#x27;.html&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>)<br>        result.append((title, num))<br>    <span class="hljs-keyword">return</span> result <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(result) &gt; <span class="hljs-number">0</span> <span class="hljs-keyword">else</span> exit(<span class="hljs-string">&#x27;无结果&#x27;</span>)<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_anim_id</span>(<span class="hljs-params">list_len</span>) -&gt; int:</span><br>    index = -<span class="hljs-number">1</span><br>    <span class="hljs-keyword">while</span> index &gt;= list_len <span class="hljs-keyword">or</span> index &lt; <span class="hljs-number">0</span>:<br>        <span class="hljs-keyword">try</span>:<br>            index = <span class="hljs-built_in">int</span>(<span class="hljs-built_in">input</span>(<span class="hljs-string">&#x27;选择一个: &#x27;</span>)) - <span class="hljs-number">1</span><br>        <span class="hljs-keyword">except</span>:<br>            <span class="hljs-keyword">continue</span><br>    <span class="hljs-keyword">return</span> index<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_episode_list</span>(<span class="hljs-params">anim_id: <span class="hljs-built_in">str</span></span>) -&gt; list:</span><br>    r = get_request(<span class="hljs-string">&#x27;http://www.imomoe.in/player/&#x27;</span> + anim_id + <span class="hljs-string">&#x27;-0-0.html&#x27;</span>)<br>    match = re.search(<span class="hljs-string">r&#x27;&quot;(/playdata/(\d+)/(\d+)(\.)js(\?)(\d+)(\.)(\d+))&quot;&#x27;</span>, r.content.decode(<span class="hljs-string">&quot;gbk&quot;</span>))<br>    <br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> match:<br>        exit(<span class="hljs-string">&#x27;无法获取集数列表地址！&#x27;</span>)<br>    <br>    r = get_request(<span class="hljs-string">&#x27;http://www.imomoe.in&#x27;</span> + match.group(<span class="hljs-number">1</span>))<br>    <br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> r:<br>        exit(<span class="hljs-string">&#x27;无法获取集数列表！&#x27;</span>)<br>    <br>    js = re.sub(<span class="hljs-string">r&quot;,urlinfo=&#x27;http://&#x27;\+document.domain\+&#x27;/player/(\d+)-&lt;from&gt;-&lt;pos&gt;.html&#x27;;&quot;</span>, <span class="hljs-string">&quot;&quot;</span>, r.content.decode(<span class="hljs-string">&quot;gbk&quot;</span>)\<br>        .replace(<span class="hljs-string">&#x27;var VideoListJson=&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>)).replace(<span class="hljs-string">&quot;&#x27;&quot;</span>, <span class="hljs-string">&#x27;&quot;&#x27;</span>)  <span class="hljs-comment"># !转成合法json</span><br>    <span class="hljs-keyword">return</span> json.loads(js)[<span class="hljs-number">0</span>][<span class="hljs-number">1</span>]<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_episode_id_list</span>(<span class="hljs-params">episode_list: <span class="hljs-built_in">list</span></span>) -&gt; list:</span><br>    <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>        input_str = <span class="hljs-built_in">input</span>(<span class="hljs-string">&#x27;选择下载集数（多个使用单个空格分隔，输入&quot;all&quot;下载全部）：&#x27;</span>)<br>        <span class="hljs-keyword">if</span> input_str.strip().lower() == <span class="hljs-string">&#x27;all&#x27;</span>:<br>            <span class="hljs-keyword">return</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(episode_list))<br>        <span class="hljs-keyword">try</span>:<br>            <span class="hljs-keyword">return</span> [<span class="hljs-built_in">int</span>(i) - <span class="hljs-number">1</span> <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> input_str.split(<span class="hljs-string">&#x27; &#x27;</span>)]<br>        <span class="hljs-keyword">except</span>:<br>            <span class="hljs-keyword">continue</span><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">download_video</span>(<span class="hljs-params">url: <span class="hljs-built_in">str</span>, path: <span class="hljs-built_in">str</span></span>):</span><br>    print(<span class="hljs-string">&#x27;下载：%s&#x27;</span> % url)<br>    r = requests.get(url, stream=<span class="hljs-literal">True</span>)<br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(path, <span class="hljs-string">&quot;wb&quot;</span>) <span class="hljs-keyword">as</span> mp4:<br>        <span class="hljs-keyword">for</span> chunk <span class="hljs-keyword">in</span> r.iter_content(chunk_size=<span class="hljs-number">1024</span> * <span class="hljs-number">1024</span>):<br>            <span class="hljs-keyword">if</span> chunk:<br>                mp4.write(chunk)<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    soup = search()<br>    anim_list = get_anim_list(soup)<br>    <br>    print(<span class="hljs-string">&#x27;\n\n搜索结果：&#x27;</span>)<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(anim_list)):<br>        print(<span class="hljs-string">&#x27;\t&#x27;</span> + <span class="hljs-built_in">str</span>(i + <span class="hljs-number">1</span>) + <span class="hljs-string">&#x27;.&#x27;</span> + anim_list[i][<span class="hljs-number">0</span>])<br>    <br>    selected_index = get_anim_id(<span class="hljs-built_in">len</span>(anim_list))<br>    episode_list = get_episode_list(anim_list[selected_index][<span class="hljs-number">1</span>])<br>    <br>    print(<span class="hljs-string">&#x27;\n\n共%d集&#x27;</span> % <span class="hljs-built_in">len</span>(episode_list))<br>    indexes = get_episode_id_list(episode_list)<br>    directory = os.path.join(os.path.dirname(__file__), <span class="hljs-string">&#x27;animations&#x27;</span>, anim_list[selected_index][<span class="hljs-number">0</span>])<br>    <br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> os.path.exists(directory):<br>        os.makedirs(directory)<br>    <br>    print(<span class="hljs-string">&#x27;\n\n开始下载...&#x27;</span>)<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> indexes:<br>        <span class="hljs-keyword">if</span> i &gt;= <span class="hljs-built_in">len</span>(episode_list) <span class="hljs-keyword">or</span> i &lt; <span class="hljs-number">0</span>:<br>            print(<span class="hljs-string">&#x27;忽略第%d集&#x27;</span> % (i + <span class="hljs-number">1</span>))<br>            <span class="hljs-keyword">continue</span><br>        <br>        download_video(episode_list[i].split(<span class="hljs-string">&#x27;$&#x27;</span>)[<span class="hljs-number">1</span>], os.path.join(directory, <span class="hljs-built_in">str</span>(i + <span class="hljs-number">1</span>) + <span class="hljs-string">&#x27;.mp4&#x27;</span>).strip())<br>        print(<span class="hljs-string">&#x27;成功下载第%d集&#x27;</span> % (i + <span class="hljs-number">1</span>))<br>    <br>    os.system(<span class="hljs-string">&#x27;pause&#x27;</span>)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>编程</category>
      
      <category>Python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>爬虫</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>三角恒等变换</title>
    <link href="/posts/ed79c1d6/"/>
    <url>/posts/ed79c1d6/</url>
    
    <content type="html"><![CDATA[<h1 id="倒数关系"><a href="#倒数关系" class="headerlink" title="倒数关系"></a>倒数关系</h1><script type="math/tex; mode=display">\begin{align}\sin \alpha \cdot \csc \alpha &= 1 \\\\\cos \alpha \cdot \sec \alpha &= 1 \\\\\tan \alpha \cdot \cot \alpha &= 1\end{align}</script><h1 id="商数关系"><a href="#商数关系" class="headerlink" title="商数关系"></a>商数关系</h1><script type="math/tex; mode=display">\frac{\sin \alpha}{\cos \alpha} = \tan \alpha = \frac{\sec \alpha}{\csc \alpha} = \frac{1}{\cot \alpha}</script><h1 id="平方关系"><a href="#平方关系" class="headerlink" title="平方关系"></a>平方关系</h1><script type="math/tex; mode=display">\begin{align}\sin^2 \alpha + \cos^2 \alpha &= 1 \\\\\sec^2 \alpha - \tan^2 \alpha &= 1 \\\\\csc^2 \alpha - \cot^2 \alpha &= 1\end{align}</script><h1 id="诱导公式"><a href="#诱导公式" class="headerlink" title="诱导公式"></a>诱导公式</h1><ul><li><strong>奇变偶不变，符号看象限</strong></li></ul><h2 id="第一组"><a href="#第一组" class="headerlink" title="第一组"></a>第一组</h2><script type="math/tex; mode=display">\begin{align}\sin(2k\pi + \alpha) &= -\sin \alpha \\\\\cos(2k\pi + \alpha) &= -\cos \alpha \\\\\tan(2k\pi + \alpha) &= \tan \alpha \\\\k \in Z\end{align}</script><h2 id="第二组"><a href="#第二组" class="headerlink" title="第二组"></a>第二组</h2><script type="math/tex; mode=display">\begin{align}\sin(-\alpha) &= -\sin \alpha \\\\\cos(-\alpha) &= \cos \alpha  \\\\\tan(-\alpha) &= -\tan \alpha\end{align}</script><h2 id="第三组"><a href="#第三组" class="headerlink" title="第三组"></a>第三组</h2><script type="math/tex; mode=display">\begin{align}\sin(\pi + \alpha) &= -\sin \alpha \\\\\cos(\pi + \alpha) &= -\cos \alpha \\\\\tan(\pi + \alpha) &= \tan \alpha\end{align}</script><h2 id="第四组"><a href="#第四组" class="headerlink" title="第四组"></a>第四组</h2><script type="math/tex; mode=display">\begin{align}\sin(\pi - \alpha) &= \sin \alpha  \\\\\cos(\pi - \alpha) &= -\cos \alpha \\\\\tan(\pi - \alpha) &= -\tan \alpha\end{align}</script><h2 id="第五组"><a href="#第五组" class="headerlink" title="第五组"></a>第五组</h2><script type="math/tex; mode=display">\begin{align}\sin(\frac{\pi}{2} - \alpha) &= \cos \alpha \\\\\cos(\frac{\pi}{2} - \alpha) &= \sin \alpha \\\\\tan(\frac{\pi}{2} - \alpha) &= \cot \alpha\end{align}</script><h2 id="第六组"><a href="#第六组" class="headerlink" title="第六组"></a>第六组</h2><script type="math/tex; mode=display">\begin{align}\sin(\frac{\pi}{2} + \alpha) &= \cos \alpha  \\\\\cos(\frac{\pi}{2} + \alpha) &= -\sin \alpha \\\\\tan(\frac{\pi}{2} + \alpha) &= -\cot \alpha\end{align}</script><h1 id="和差角"><a href="#和差角" class="headerlink" title="和差角"></a>和差角</h1><script type="math/tex; mode=display">\begin{align}\sin(\alpha + \beta) &= \sin \alpha \cos \beta + \cos \alpha \sin \beta \\\\\sin(\alpha - \beta) &= \sin \alpha \cos \beta - \cos \alpha \sin \beta \\\\\cos(\alpha + \beta) &= \cos \alpha \cos \beta - \sin \alpha \sin \beta \\\\\cos(\alpha - \beta) &= \cos \alpha \cos \beta + \sin \alpha \sin \beta \\\\\tan(\alpha + \beta) &= \frac{\tan \alpha + \tan \beta}{1 - \tan \alpha \tan \beta} \\\\\tan(\alpha - \beta) &= \frac{\tan \alpha - \tan \beta}{1 + \tan \alpha \tan \beta}\end{align}</script><h1 id="倍角"><a href="#倍角" class="headerlink" title="倍角"></a>倍角</h1><h2 id="二倍角"><a href="#二倍角" class="headerlink" title="二倍角"></a>二倍角</h2><script type="math/tex; mode=display">\begin{align}\sin 2\alpha &= 2\sin \alpha \cos \alpha \\\\\cos 2\alpha &= \cos^2 \alpha - \sin^2 \alpha \\\\             &= 2\cos^2 \alpha - 1 \\\\             &= 1 - 2\sin^2 \alpha \\\\\tan 2\alpha &= \frac{2\tan \alpha}{1 - \tan^2 \alpha}\end{align}</script><h2 id="三倍角"><a href="#三倍角" class="headerlink" title="三倍角"></a>三倍角</h2><script type="math/tex; mode=display">\begin{align}\sin 3\alpha &= -4\sin^3 \alpha + 3\sin \alpha \\\\\cos 3\alpha &= 4\cos^3 \alpha - 3\cos \alpha \\\\\tan 3\alpha &= \frac{3\tan \alpha - \tan^3 \alpha}{1 - 3\tan^2 \alpha}\end{align}</script><h1 id="半角公式-降幂公式"><a href="#半角公式-降幂公式" class="headerlink" title="半角公式/降幂公式"></a>半角公式/降幂公式</h1><script type="math/tex; mode=display">\begin{align}\sin^2 \alpha &= \frac{1 - \cos 2\alpha}{2} \\\\\cos^2 \alpha &= \frac{1 + \cos 2\alpha}{2} \\\\\tan^2 \alpha &= \frac{1 - \cos 2\alpha}{1 + \cos 2\alpha} \\\\\tan \alpha &= \frac{sin 2\alpha}{1 + \cos 2\alpha} \\\\            &= \frac{1 - \cos 2\alpha}{sin 2\alpha}\end{align}</script><h1 id="升幂公式"><a href="#升幂公式" class="headerlink" title="升幂公式"></a>升幂公式</h1><script type="math/tex; mode=display">\begin{align}1 + \cos 2\alpha &= 2\cos^2 \alpha \\\\1 - \cos 2\alpha &= 2\sin^2 \alpha\end{align}</script><h1 id="积化和差"><a href="#积化和差" class="headerlink" title="积化和差"></a>积化和差</h1><script type="math/tex; mode=display">\begin{align}\sin \alpha \cos \beta &= \frac{1}{2}(\sin(\alpha + \beta) + \sin(\alpha - \beta)) \\\\\cos \alpha \sin \beta &= \frac{1}{2}(\sin(\alpha + \beta) - \sin(\alpha - \beta)) \\\\\cos \alpha \cos \beta &= \frac{1}{2}(\cos(\alpha + \beta) + \cos(\alpha - \beta)) \\\\\sin \alpha \sin \beta &= -\frac{1}{2}(\cos(\alpha + \beta) - \cos(\alpha - \beta))\end{align}</script><h1 id="和差化积"><a href="#和差化积" class="headerlink" title="和差化积"></a>和差化积</h1><script type="math/tex; mode=display">\begin{align}\sin \alpha + \sin \beta &= 2\sin \frac{\alpha + \beta}{2} \ cos \frac{\alpha - \beta}{2} \\\\\sin \alpha - \sin \beta &= 2\cos \frac{\alpha + \beta}{2} \ sin \frac{\alpha - \beta}{2} \\\\\cos \alpha + \cos \beta &= 2\cos \frac{\alpha + \beta}{2} \ cos \frac{\alpha - \beta}{2} \\\\\cos \alpha - \cos \beta &= -2\sin \frac{\alpha + \beta}{2} \ sin \frac{\alpha - \beta}{2}\end{align}</script><h1 id="万能置换公式"><a href="#万能置换公式" class="headerlink" title="万能置换公式"></a>万能置换公式</h1><script type="math/tex; mode=display">\begin{align}\sin \alpha &= \frac{2\tan \frac{\alpha}{2}}{1 + \tan^2 \frac{\alpha}{2}} \\\\\cos \alpha &= \frac{1 - \tan^2 \frac{\alpha}{2}}{1 + \tan^2 \frac{\alpha}{2}} \\\\\tan \alpha &= \frac{2\tan \frac{\alpha}{2}}{1 - \tan^2 \frac{\alpha}{2}}\end{align}</script><h1 id="辅助角公式"><a href="#辅助角公式" class="headerlink" title="辅助角公式"></a>辅助角公式</h1><script type="math/tex; mode=display">\begin{align}a\sin \alpha + b\cos \alpha = \sqrt{a^2 + b^2} \sin(\alpha + \varphi) \\\\\text{其中} \cos \varphi = \frac{a}{\sqrt{a^2 + b^2}}, \sin \varphi = \frac{b}{\sqrt{a^2 + b^2}}\end{align}</script><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><script type="math/tex; mode=display">\begin{align}\tan \alpha + \frac{1}{\tan \alpha} = \frac{2}{\sin 2\alpha}  \\\\\tan \alpha - \frac{1}{\tan \alpha} = -\frac{2}{\tan 2\alpha} \\\\|{\sin(n\theta)}| < n|{\sin \theta}|,\ (n \in N^+)\end{align}</script>]]></content>
    
    
    <categories>
      
      <category>高考</category>
      
      <category>数学</category>
      
    </categories>
    
    
    <tags>
      
      <tag>三角恒等式</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
