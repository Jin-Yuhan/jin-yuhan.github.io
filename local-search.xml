<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>旋转矩阵、欧拉角、四元数</title>
    <link href="/posts/8e86a5e4/"/>
    <url>/posts/8e86a5e4/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    <categories>
      
      <category>数学杂谈</category>
      
    </categories>
    
    
    <tags>
      
      <tag>旋转矩阵</tag>
      
      <tag>欧拉角</tag>
      
      <tag>四元数</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>TensorFlow 学习笔记（一）</title>
    <link href="/posts/a983ec53/"/>
    <url>/posts/a983ec53/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    <categories>
      
      <category>人工智能</category>
      
    </categories>
    
    
    <tags>
      
      <tag>TensorFlow</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>TensorFlow 学习笔记（零）</title>
    <link href="/posts/463c0d24/"/>
    <url>/posts/463c0d24/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    <categories>
      
      <category>人工智能</category>
      
    </categories>
    
    
    <tags>
      
      <tag>TensorFlow</tag>
      
      <tag>机器学习</tag>
      
      <tag>深度学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用 VSCode 开发 Arduino</title>
    <link href="/posts/3d688237/"/>
    <url>/posts/3d688237/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    <categories>
      
      <category>实用技巧</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Arduino</tag>
      
      <tag>VSCode</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>利用 GitHub Actions 自动部署 Hexo 博客至 GitHub Pages</title>
    <link href="/posts/13dfd8f4/"/>
    <url>/posts/13dfd8f4/</url>
    
    <content type="html"><![CDATA[<h1 id="简介-GitHub-Actions"><a href="#简介-GitHub-Actions" class="headerlink" title="简介 GitHub Actions"></a>简介 GitHub Actions</h1><p>GitHub Actions 是 GitHub 官方推出的持续集成/部署模块服务（CI/CD），只需一个配置文件即可自动开启服务，而且自带云环境运行。</p><h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><ol><li><code>workflow</code>：持续集成一次运行的过程。</li><li><code>job</code>：一个 <code>workflow</code> 由一个或多个 <code>job</code> 构成。</li><li><code>step</code>：每个 <code>job</code> 由多个 <code>step</code> 构成，一步步完成。</li><li><code>action</code>：每个 <code>step</code> 可以依次执行一个或多个<code>action</code>。</li></ol><h1 id="创建代码仓库"><a href="#创建代码仓库" class="headerlink" title="创建代码仓库"></a>创建代码仓库</h1><p><img src="https://cdn.jsdelivr.net/gh/Jin-Yuhan/MyImageStorage@latest/img/github_new_repo_auto_blog.png" alt="创建代码仓库"></p><h1 id="创建-workflow"><a href="#创建-workflow" class="headerlink" title="创建 workflow"></a>创建 workflow</h1><p>在博客目录下创建<code>.github/workflows/xxx.yml</code>文件，文件名任意。</p><p>文件内容如下，根据自己的需求增删 <code>step</code>：<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">name:</span> <span class="hljs-string">Deploy</span>                      <span class="hljs-comment"># Actions 显示的名字，随意设置</span><br><br><span class="hljs-attr">on:</span> [<span class="hljs-string">push</span>]                        <span class="hljs-comment"># 监听到 push 事件后触发</span><br><br><span class="hljs-attr">jobs:</span><br>  <span class="hljs-attr">build:</span><br><br>    <span class="hljs-attr">runs-on:</span> <span class="hljs-string">ubuntu-latest</span><br><br>    <span class="hljs-attr">steps:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Checkout</span>              <span class="hljs-comment"># 拉取当前执行 Actions 仓库的指定分支</span><br>      <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/checkout@v2</span><br>      <span class="hljs-attr">with:</span><br>        <span class="hljs-attr">ref:</span> <span class="hljs-string">master</span><br><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Update</span> <span class="hljs-string">Submodule</span>      <span class="hljs-comment"># 如果仓库有 submodule，在这里更新，没有则删掉此步骤</span><br>      <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br>        <span class="hljs-string">git</span> <span class="hljs-string">submodule</span> <span class="hljs-string">init</span><br>        <span class="hljs-string">git</span> <span class="hljs-string">submodule</span> <span class="hljs-string">update</span> <span class="hljs-string">--remote</span><br><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Setup</span> <span class="hljs-string">Node</span>            <span class="hljs-comment"># 安装 Node 环境</span><br>      <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/setup-node@v1</span><br>      <span class="hljs-attr">with:</span><br>        <span class="hljs-attr">node-version:</span> <span class="hljs-string">&quot;10.x&quot;</span><br><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Hexo</span> <span class="hljs-string">Generate</span>         <span class="hljs-comment"># 安装 Hexo 依赖并且生成静态文件</span><br>      <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br>        <span class="hljs-string">rm</span> <span class="hljs-string">-f</span> <span class="hljs-string">.yarnclean</span><br>        <span class="hljs-string">yarn</span> <span class="hljs-string">--frozen-lockfile</span> <span class="hljs-string">--ignore-engines</span> <span class="hljs-string">--ignore-optional</span> <span class="hljs-string">--non-interactive</span> <span class="hljs-string">--silent</span> <span class="hljs-string">--ignore-scripts</span> <span class="hljs-string">--production=false</span><br>        <span class="hljs-string">rm</span> <span class="hljs-string">-rf</span> <span class="hljs-string">./public</span><br>        <span class="hljs-string">yarn</span> <span class="hljs-string">run</span> <span class="hljs-string">hexo</span> <span class="hljs-string">clean</span><br>        <span class="hljs-string">yarn</span> <span class="hljs-string">run</span> <span class="hljs-string">hexo</span> <span class="hljs-string">bangumi</span> <span class="hljs-string">-u</span><br>        <span class="hljs-string">yarn</span> <span class="hljs-string">run</span> <span class="hljs-string">hexo</span> <span class="hljs-string">generate</span><br><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Hexo</span> <span class="hljs-string">Deploy</span>           <span class="hljs-comment"># 部署步骤，这里以 hexo deploy 为例</span><br>      <span class="hljs-attr">env:</span><br>        <span class="hljs-attr">SSH_PRIVATE:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">secrets.SSH_PRIVATE</span> <span class="hljs-string">&#125;&#125;</span><br>        <span class="hljs-attr">GIT_NAME:</span> <span class="hljs-string">yourname</span><br>        <span class="hljs-attr">GIT_EMAIL:</span> <span class="hljs-string">your@email.com</span><br>      <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br>        <span class="hljs-string">mkdir</span> <span class="hljs-string">-p</span> <span class="hljs-string">~/.ssh/</span><br>        <span class="hljs-string">echo</span> <span class="hljs-string">&quot;$SSH_PRIVATE&quot;</span> <span class="hljs-string">|</span> <span class="hljs-string">tr</span> <span class="hljs-string">-d</span> <span class="hljs-string">&#x27;\r&#x27;</span> <span class="hljs-string">&gt;</span> <span class="hljs-string">~/.ssh/id_rsa</span><br>        <span class="hljs-string">chmod</span> <span class="hljs-number">600</span> <span class="hljs-string">~/.ssh/id_rsa</span><br>        <span class="hljs-string">ssh-keyscan</span> <span class="hljs-string">github.com</span> <span class="hljs-string">&gt;&gt;</span> <span class="hljs-string">~/.ssh/known_hosts</span><br>        <span class="hljs-string">git</span> <span class="hljs-string">config</span> <span class="hljs-string">--global</span> <span class="hljs-string">user.name</span> <span class="hljs-string">&quot;$GIT_NAME&quot;</span><br>        <span class="hljs-string">git</span> <span class="hljs-string">config</span> <span class="hljs-string">--global</span> <span class="hljs-string">user.email</span> <span class="hljs-string">&quot;$GIT_EMAIL&quot;</span><br>        <span class="hljs-string">yarn</span> <span class="hljs-string">run</span> <span class="hljs-string">hexo</span> <span class="hljs-string">deploy</span><br></code></pre></td></tr></table></figure></p><p>只要配置了 hexo deploy 的都可以通过上面这种方式部署。</p>]]></content>
    
    
    <categories>
      
      <category>博客搭建</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>GitHub Pages</tag>
      
      <tag>GitHub Actions</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo 与 GitHub Pages 搭建静态博客</title>
    <link href="/posts/78af359a/"/>
    <url>/posts/78af359a/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    <categories>
      
      <category>博客搭建</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>GitHub Pages</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>写在前面</title>
    <link href="/posts/ca8bfdf3/"/>
    <url>/posts/ca8bfdf3/</url>
    
    <content type="html"><![CDATA[<blockquote><p>本博客基于 <a href="https://hexo.io">Hexo</a> 主题 <a href="https://github.com/fluid-dev/hexo-theme-fluid">Fluid</a>。</p></blockquote><h1 id="为什么要做这个博客"><a href="#为什么要做这个博客" class="headerlink" title="为什么要做这个博客"></a>为什么要做这个博客</h1><h1 id="友链申请"><a href="#友链申请" class="headerlink" title="友链申请"></a>友链申请</h1><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># 请在下方评论区中以该格式评论</span><br><span class="hljs-attr">name:</span>   <span class="hljs-comment"># 你的名称</span><br><span class="hljs-attr">link:</span>   <span class="hljs-comment"># 网站链接</span><br><span class="hljs-attr">avatar:</span> <span class="hljs-comment"># 头像（可选）</span><br><span class="hljs-attr">descr:</span>  <span class="hljs-comment"># 描述（可选）</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>计数原理、排列组合、概率论初步</title>
    <link href="/posts/2140af2c/"/>
    <url>/posts/2140af2c/</url>
    
    <content type="html"><![CDATA[<h1 id="计数原理"><a href="#计数原理" class="headerlink" title="计数原理"></a>计数原理</h1><h2 id="乘法原理"><a href="#乘法原理" class="headerlink" title="乘法原理"></a>乘法原理</h2><p>如果完成一件事需要$n$个步骤，第$1$步有$m_1$种不同的方法，第$2$步有$m_2$种不同的方法，……，第$n$步有$m_n$种不同方法，那么完成这件事共有</p><script type="math/tex; mode=display">N=m_1m_2...m_n</script><p>种不同方法。</p><p><strong><span style="color:red;">注意：必须依次通过每一步骤，才算完成一件事！</span></strong></p><h2 id="加法原理"><a href="#加法原理" class="headerlink" title="加法原理"></a>加法原理</h2><p>如果完成一件事有$n$类办法，在第$1$类办法中有$m_1$种不同的方法，在第$2$类办法中有$m_2$种不同的方法，……，在第$n$类办法中有$m_n$种不同的方法，那么完成这件事共有</p><script type="math/tex; mode=display">N=m_1+m_2+...+m_n</script><p>种不同方法。</p><hr><h1 id="排列组合"><a href="#排列组合" class="headerlink" title="排列组合"></a>排列组合</h1><h2 id="排列"><a href="#排列" class="headerlink" title="排列"></a>排列</h2><ul><li><p>一般地，从$n$个<strong>不同元素</strong>中取出$m(m \le n)$个元素，按照<strong>一定的次序</strong>排成一列，叫做：从$n$个不同元素中取出$m$个元素的一个排列。</p></li><li><p>从$n$个<strong>不同元素</strong>中取出$m(m \le n)$个元素的所有排列的个数叫做：从$n$个不同元素中取出$m$个元素的排列数，用符号$P^m_n$或$A^m_n$表示。</p></li></ul><p>根据乘法原理，可知从$n$个元素中取出的第$m(m \le n)$个元素有$n-m+1$种可能，于是一共有</p><script type="math/tex; mode=display">n(n-1)(n-2)...(n-m+1)={n!\over(n-m)!}</script><p>种可能。</p><p>因此，</p><script type="math/tex; mode=display">A_n^m={n!\over(n-m)!}</script><p>为排列数公式。</p><p>另外，$n$个不同元素全部取出的一个排列，叫$n$个元素的一个全排列。此时$m=n$，有</p><script type="math/tex; mode=display">A_n^n={n!\over 0!}=n!</script><h3 id="排列恒等式"><a href="#排列恒等式" class="headerlink" title="排列恒等式"></a>排列恒等式</h3><script type="math/tex; mode=display">\begin{aligned}A^m_n&=(n-m+1)A^{m-1}_n\\\\A^m_n&={n\over n-m} A^m_{n-1}\\\\A^m_n&=nA^{m-1}_{n-1} \\\\nA^n_n&=A^{n+1}_{n+1}-A^n_n\\\\A^m_{n+1}&=A^m_n+mA^{m-1}_n\end{aligned}</script><h2 id="组合"><a href="#组合" class="headerlink" title="组合"></a>组合</h2><ul><li><p>一般地，从$n$个<strong>不同元素</strong>中取出$m(m \le n)$个元素，组成一组，叫做：从$n$个不同元素中取出$m$个元素的一个组合。</p></li><li><p>从$n$个<strong>不同元素</strong>中取出$m(m \le n)$个元素的所有组合的个数叫做：从$n$个不同元素中取出$m$个元素的组合数，用符号$C^m_n$表示。</p></li></ul><p>从$n$个不同元素中取出$m$个元素的组合数，可以看做，用从$n$个不同元素中取出$m$个元素的排列数，除以，$m$个不同元素的全排列数，即</p><script type="math/tex; mode=display">C_n^m={A_n^m \over A_m^m}=\frac{n!}{m!(n-m)!}</script><p>其中，$m \le n$。这个公式叫组合数公式。</p><h3 id="性质"><a href="#性质" class="headerlink" title="性质"></a>性质</h3><script type="math/tex; mode=display">\begin{aligned}C_n^m&=C_n^{n-m}\\\\C_m^{n+1}&=C_n^m+C_n^{m-1}\\\\C_n^0&=1\end{aligned}</script><h3 id="组合恒等式"><a href="#组合恒等式" class="headerlink" title="组合恒等式"></a>组合恒等式</h3><script type="math/tex; mode=display">\begin{aligned}C_n^m&=\frac{n-m+1}{m}C_n^{m-1}\\\\C_n^m&=\frac{n}{n-m}C_{n-1}^{m}\\\\C_n^m&=\frac{n}{m}C_{n-1}^{m-1}\end{aligned}</script><h2 id="排列数与组合数"><a href="#排列数与组合数" class="headerlink" title="排列数与组合数"></a>排列数与组合数</h2><h3 id="区别"><a href="#区别" class="headerlink" title="区别"></a>区别</h3><p>排列与元素的次序有关，而组合与元素的次序无关。</p><h3 id="联系"><a href="#联系" class="headerlink" title="联系"></a>联系</h3><script type="math/tex; mode=display">A_n^m=m!C_n^m</script><hr><h1 id="概率论初步"><a href="#概率论初步" class="headerlink" title="概率论初步"></a>概率论初步</h1><ul><li><p><strong>概率论：</strong>研究随机现象数量规律的数学分支。</p></li><li><p><strong>试验：</strong>在概率论中，掷骰子、转硬币……都叫试验。</p></li><li><p><strong>基本事件：</strong>一次试验可能出现的结果。</p></li><li><p><strong>随机事件：</strong>试验的结果，简称事件。包括基本事件。用大写字母$A$、$B$等表示。</p></li><li><p><strong>随机现象：</strong>对于在一定条件下可能出现也可能不出现，且有统计规律性的现象。</p></li><li><p>随机事件$A$出现的概率记作$P(A)$。</p></li></ul><h2 id="古典概型"><a href="#古典概型" class="headerlink" title="古典概型"></a>古典概型</h2><h3 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h3><ol><li>一次试验可能出现的基本事件只有有限个。</li><li>每个基本事件出现的可能性相等。</li></ol><h3 id="事件出现的概率"><a href="#事件出现的概率" class="headerlink" title="事件出现的概率"></a>事件出现的概率</h3><p>在古典概型中，事件$A$出现的概率定义为</p><script type="math/tex; mode=display">P(A)=\frac{\text{事件}A\text{所包含的基本事件数}}{\text{试验中所有的基本事件数}}</script><p>用集合语言表示，设$\omega_1$，$\omega_2$，…，$\omega_n$表示所有的基本事件，基本事件的集合记为</p><script type="math/tex; mode=display">\Omega=\{ \omega_1, \omega_2,...,\omega_n \}</script><p>则</p><script type="math/tex; mode=display">P(A)=\frac{A\text{所包含的}\omega\text{的个数}}{\Omega\text{中元素}\omega\text{的总个数}}</script><blockquote><p>$\Omega$既表示基本事件的集合，又可以看做是一个特殊的随机事件，它包含了所有的基本事件，因此它是必然事件。</p></blockquote><p>我们把试验后必定出现的事件叫做<strong>必然事件</strong>，记作$\Omega$，把不可能出现的事件叫做<strong>不可能事件</strong>，记作$\emptyset$。</p><p>注意：</p><ol><li>不可能事件的概率为零，即$P(\emptyset)=0$</li><li>必然事件的概率为$1$，即$P(\Omega)=1$</li><li>对任意随机事件$E$，有$0\le P(E)\le 1$</li><li>若$\Omega=\{ \omega_1, \omega_2,…,\omega_n \}$，则$P(\omega_1)+P(\omega_2)+…+P(\omega_n)=1$</li></ol><h3 id="对立事件"><a href="#对立事件" class="headerlink" title="对立事件"></a>对立事件</h3><p>设$E$和$F$是两个随机事件，若$E$和$F$满足下列条件：</p><ol><li>$E\cup F=\Omega$</li><li>$E\cap F=\emptyset$</li></ol><p>则$E$和$F$叫做对立事件。</p><p>在任何一次试验中，事件$A$要么出现，要么不出现，如果把事件$A$不出现记作事件$\overline{A}$，那么它们互为对立事件，且</p><script type="math/tex; mode=display">P(A)+P(\overline{A})=1</script><p>其中$\overline{A}$也可以用集合语言表示为</p><script type="math/tex; mode=display">\overline{A}=\{\omega\ |\ \omega \in \Omega,\ \omega \notin A \}=\complement_\Omega A</script><h2 id="频率与概率"><a href="#频率与概率" class="headerlink" title="频率与概率"></a>频率与概率</h2><h3 id="频率"><a href="#频率" class="headerlink" title="频率"></a>频率</h3><p>对于随机事件$E$，如果在$n$次试验中出现了$m(0 \le m \le n)$次，那么$m$称为事件$E$出现的频数，$\frac{m}{n}$称为事件$E$出现的频率。</p><ul><li>在实际中可以把频率作为概率（的估计值）来应用。</li><li>频率也叫经验概率，计算频率通常是为了估计概率。</li></ul><h3 id="频率稳定性（随机现象的统计规律性）"><a href="#频率稳定性（随机现象的统计规律性）" class="headerlink" title="频率稳定性（随机现象的统计规律性）"></a>频率稳定性（随机现象的统计规律性）</h3><ol><li>在大量试验中，事件出现的频率与其概率很接近。</li><li>当试验次数无限增大时，事件出现的频率与概率相差较大的的可能性趋近于$0$。</li></ol><blockquote><p>频率稳定性说明随机事件出现的可能性大小是随机事件本身固有的，是不随人们的意志转移的。</p></blockquote><p><strong><span style="color:red;">注意：在通常意义下，概率不是试验次数无限增大时频率的极限！！！</span></strong></p><h3 id="大数定律"><a href="#大数定律" class="headerlink" title="大数定律"></a>大数定律</h3><p>频率在大数次试验中稳定于某一常数（概率）。</p><h2 id="几何概型"><a href="#几何概型" class="headerlink" title="几何概型"></a>几何概型</h2><p>在几何概型中，事件$A$出现的概率定义为</p><script type="math/tex; mode=display">P(A)=\frac{A\text{出现区域或区间的几何度量}}{\text{所考察的整个区域或区间的几何度量}}</script><ul><li><strong>几何度量：</strong>区间长度或图形面积。</li></ul><h2 id="事件-A-与事件-B-的和"><a href="#事件-A-与事件-B-的和" class="headerlink" title="事件$A$与事件$B$的和"></a>事件$A$与事件$B$的和</h2><p>设$A$、$B$为两个随机事件，把 <strong>事件$A$与事件$B$至少有一个出现</strong> 叫做事件$A$与事件$B$的和。<br>它也是一个随机事件，记作$A\cup B$。也可以说成：事件$A$或事件$B$出现。</p><h2 id="事件-A-与事件-B-的积"><a href="#事件-A-与事件-B-的积" class="headerlink" title="事件$A$与事件$B$的积"></a>事件$A$与事件$B$的积</h2><p>设$A$、$B$为两个随机事件，把 <strong>事件$A$与事件$B$同时出现</strong> 叫做事件$A$与事件$B$的积。<br>它也是一个随机事件，记作$A\cap B$或$AB$。</p><h2 id="互不相容事件（互斥事件）"><a href="#互不相容事件（互斥事件）" class="headerlink" title="互不相容事件（互斥事件）"></a>互不相容事件（互斥事件）</h2><p>不可能同时出现的两个事件叫做互不相容事件或互斥事件。<br>相互对立的两个事件是互不相容的。</p><h2 id="概率加法公式"><a href="#概率加法公式" class="headerlink" title="概率加法公式"></a>概率加法公式</h2><p>一般地，事件$A$与事件$B$的和的概率等于事件$A$出现的概率，加上事件$B$出现的概率，减去事件$A$、$B$同时出现的概率，即</p><script type="math/tex; mode=display">P(A\cup B)=P(A)+P(B)-P(AB)</script><p>若$A$与$B$是互不相容事件，那么事件$A$与事件$B$的和的概率等于它们的概率和，即</p><script type="math/tex; mode=display">P(A\cup B)=P(A)+P(B)</script><h2 id="独立事件积的概率公式"><a href="#独立事件积的概率公式" class="headerlink" title="独立事件积的概率公式"></a>独立事件积的概率公式</h2><p>对于事件$A$及$B$，如果</p><script type="math/tex; mode=display">P(AB)=P(A)\cdot P(B)</script><p>那么称事件$A$与事件$B$是统计独立的，简称独立的，也称$A$与$B$相互独立。</p><p>同时，上式为独立事件积的概率公式。</p><p>根据定义，可以证明：如果事件$A$与事件$B$相互独立，$A$的对立事件为$\overline{A}$、$B$的对立事件为$\overline{B}$，那么$\overline{A}$与$B$、$A$与$\overline{B}$、$\overline{A}$与$\overline{B}$也相互独立。</p>]]></content>
    
    
    <categories>
      
      <category>高考</category>
      
      <category>数学</category>
      
    </categories>
    
    
    <tags>
      
      <tag>计数原理</tag>
      
      <tag>排列组合</tag>
      
      <tag>概率论</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>樱花动漫爬虫</title>
    <link href="/posts/b6dc2c/"/>
    <url>/posts/b6dc2c/</url>
    
    <content type="html"><![CDATA[<h1 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h1><p>模仿樱花动漫官网的逻辑，查询到目标动漫的播放网页。在该网页的<code>html</code>文件中匹配<code>(/playdata/(\d+)/(\d+)(\.)js(\?)(\d+)(\.)(\d+))</code>，找到保存了该动漫下载路径列表的<code>js</code>文件，通过字符串操作，将文件内容转为<code>json</code>并获取视频列表。最后根据输入，得到对应的下载路径，请求下载。</p><h1 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h1><p>下载的视频文件默认保存在代码所在目录下的<code>animations\$&#123;animation_name&#125;\$&#123;index&#125;.mp4</code>。<br>其中<code>animation_name</code>是动漫的全名，<code>index</code>是对应的集数。</p><h1 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> urllib.parse <span class="hljs-keyword">import</span> quote<br><span class="hljs-keyword">from</span> bs4 <span class="hljs-keyword">import</span> BeautifulSoup<br><span class="hljs-keyword">import</span> requests, sys, re, json, os<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">exit</span>(<span class="hljs-params">msg: <span class="hljs-built_in">str</span></span>):</span><br>    print(msg)<br>    os.system(<span class="hljs-string">&#x27;pause&#x27;</span>)<br>    sys.exit()<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_request</span>(<span class="hljs-params">url, timeout=<span class="hljs-number">20</span></span>) -&gt; requests.Response:</span><br>    print(<span class="hljs-string">&#x27;请求：%s&#x27;</span> % url)<br>    <br>    <span class="hljs-keyword">try</span>:<br>        r = requests.get(url, timeout=timeout)<br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        print(e)<br>        exit(<span class="hljs-string">&#x27;请求失败！&#x27;</span>)<br>    <span class="hljs-keyword">return</span> r<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">search</span>() -&gt; BeautifulSoup:</span><br>    sw = quote(<span class="hljs-built_in">input</span>(<span class="hljs-string">&#x27;搜索: &#x27;</span>).encode(<span class="hljs-string">&#x27;gb2312&#x27;</span>))<br>    r = get_request(<span class="hljs-string">&#x27;http://www.imomoe.in/search.asp?searchword=&#x27;</span> + sw)<br>    <span class="hljs-keyword">return</span> BeautifulSoup(r.content.decode(<span class="hljs-string">&quot;gbk&quot;</span>).encode(<span class="hljs-string">&quot;utf-8&quot;</span>), <span class="hljs-string">&#x27;html.parser&#x27;</span>)<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_anim_list</span>(<span class="hljs-params">soup: BeautifulSoup</span>) -&gt; list:</span><br>    divs = soup.find_all(<span class="hljs-string">&#x27;div&#x27;</span>, attrs=&#123;<span class="hljs-string">&#x27;class&#x27;</span>: <span class="hljs-string">&#x27;pics&#x27;</span>&#125;)<br>    <br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> (<span class="hljs-built_in">len</span>(divs) == <span class="hljs-number">2</span>):<br>        exit(<span class="hljs-string">&#x27;无法获取动漫列表！&#x27;</span>)<br>    <br>    anim_list = divs[<span class="hljs-number">0</span>].ul<br>    result = []<br>    <br>    <span class="hljs-keyword">for</span> li <span class="hljs-keyword">in</span> anim_list.find_all(<span class="hljs-string">&#x27;li&#x27;</span>):<br>        a = li.h2.a<br>        title = a[<span class="hljs-string">&#x27;title&#x27;</span>]<br>        num = a[<span class="hljs-string">&#x27;href&#x27;</span>].replace(<span class="hljs-string">&#x27;/view/&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>).replace(<span class="hljs-string">&#x27;.html&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>)<br>        result.append((title, num))<br>    <span class="hljs-keyword">return</span> result <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(result) &gt; <span class="hljs-number">0</span> <span class="hljs-keyword">else</span> exit(<span class="hljs-string">&#x27;无结果&#x27;</span>)<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_anim_id</span>(<span class="hljs-params">list_len</span>) -&gt; int:</span><br>    index = -<span class="hljs-number">1</span><br>    <span class="hljs-keyword">while</span> index &gt;= list_len <span class="hljs-keyword">or</span> index &lt; <span class="hljs-number">0</span>:<br>        <span class="hljs-keyword">try</span>:<br>            index = <span class="hljs-built_in">int</span>(<span class="hljs-built_in">input</span>(<span class="hljs-string">&#x27;选择一个: &#x27;</span>)) - <span class="hljs-number">1</span><br>        <span class="hljs-keyword">except</span>:<br>            <span class="hljs-keyword">continue</span><br>    <span class="hljs-keyword">return</span> index<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_episode_list</span>(<span class="hljs-params">anim_id: <span class="hljs-built_in">str</span></span>) -&gt; list:</span><br>    r = get_request(<span class="hljs-string">&#x27;http://www.imomoe.in/player/&#x27;</span> + anim_id + <span class="hljs-string">&#x27;-0-0.html&#x27;</span>)<br>    match = re.search(<span class="hljs-string">r&#x27;&quot;(/playdata/(\d+)/(\d+)(\.)js(\?)(\d+)(\.)(\d+))&quot;&#x27;</span>, r.content.decode(<span class="hljs-string">&quot;gbk&quot;</span>))<br>    <br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> match:<br>        exit(<span class="hljs-string">&#x27;无法获取集数列表地址！&#x27;</span>)<br>    <br>    r = get_request(<span class="hljs-string">&#x27;http://www.imomoe.in&#x27;</span> + match.group(<span class="hljs-number">1</span>))<br>    <br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> r:<br>        exit(<span class="hljs-string">&#x27;无法获取集数列表！&#x27;</span>)<br>    <br>    js = re.sub(<span class="hljs-string">r&quot;,urlinfo=&#x27;http://&#x27;\+document.domain\+&#x27;/player/(\d+)-&lt;from&gt;-&lt;pos&gt;.html&#x27;;&quot;</span>, <span class="hljs-string">&quot;&quot;</span>, r.content.decode(<span class="hljs-string">&quot;gbk&quot;</span>)\<br>        .replace(<span class="hljs-string">&#x27;var VideoListJson=&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>)).replace(<span class="hljs-string">&quot;&#x27;&quot;</span>, <span class="hljs-string">&#x27;&quot;&#x27;</span>)  <span class="hljs-comment"># !转成合法json</span><br>    <span class="hljs-keyword">return</span> json.loads(js)[<span class="hljs-number">0</span>][<span class="hljs-number">1</span>]<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_episode_id_list</span>(<span class="hljs-params">episode_list: <span class="hljs-built_in">list</span></span>) -&gt; list:</span><br>    <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>        input_str = <span class="hljs-built_in">input</span>(<span class="hljs-string">&#x27;选择下载集数（多个使用单个空格分隔，输入&quot;all&quot;下载全部）：&#x27;</span>)<br>        <span class="hljs-keyword">if</span> input_str.strip().lower() == <span class="hljs-string">&#x27;all&#x27;</span>:<br>            <span class="hljs-keyword">return</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(episode_list))<br>        <span class="hljs-keyword">try</span>:<br>            <span class="hljs-keyword">return</span> [<span class="hljs-built_in">int</span>(i) - <span class="hljs-number">1</span> <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> input_str.split(<span class="hljs-string">&#x27; &#x27;</span>)]<br>        <span class="hljs-keyword">except</span>:<br>            <span class="hljs-keyword">continue</span><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">download_video</span>(<span class="hljs-params">url: <span class="hljs-built_in">str</span>, path: <span class="hljs-built_in">str</span></span>):</span><br>    print(<span class="hljs-string">&#x27;下载：%s&#x27;</span> % url)<br>    r = requests.get(url, stream=<span class="hljs-literal">True</span>)<br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(path, <span class="hljs-string">&quot;wb&quot;</span>) <span class="hljs-keyword">as</span> mp4:<br>        <span class="hljs-keyword">for</span> chunk <span class="hljs-keyword">in</span> r.iter_content(chunk_size=<span class="hljs-number">1024</span> * <span class="hljs-number">1024</span>):<br>            <span class="hljs-keyword">if</span> chunk:<br>                mp4.write(chunk)<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    soup = search()<br>    anim_list = get_anim_list(soup)<br>    <br>    print(<span class="hljs-string">&#x27;\n\n搜索结果：&#x27;</span>)<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(anim_list)):<br>        print(<span class="hljs-string">&#x27;\t&#x27;</span> + <span class="hljs-built_in">str</span>(i + <span class="hljs-number">1</span>) + <span class="hljs-string">&#x27;.&#x27;</span> + anim_list[i][<span class="hljs-number">0</span>])<br>    <br>    selected_index = get_anim_id(<span class="hljs-built_in">len</span>(anim_list))<br>    episode_list = get_episode_list(anim_list[selected_index][<span class="hljs-number">1</span>])<br>    <br>    print(<span class="hljs-string">&#x27;\n\n共%d集&#x27;</span> % <span class="hljs-built_in">len</span>(episode_list))<br>    indexes = get_episode_id_list(episode_list)<br>    directory = os.path.join(os.path.dirname(__file__), <span class="hljs-string">&#x27;animations&#x27;</span>, anim_list[selected_index][<span class="hljs-number">0</span>])<br>    <br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> os.path.exists(directory):<br>        os.makedirs(directory)<br>    <br>    print(<span class="hljs-string">&#x27;\n\n开始下载...&#x27;</span>)<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> indexes:<br>        <span class="hljs-keyword">if</span> i &gt;= <span class="hljs-built_in">len</span>(episode_list) <span class="hljs-keyword">or</span> i &lt; <span class="hljs-number">0</span>:<br>            print(<span class="hljs-string">&#x27;忽略第%d集&#x27;</span> % (i + <span class="hljs-number">1</span>))<br>            <span class="hljs-keyword">continue</span><br>        <br>        download_video(episode_list[i].split(<span class="hljs-string">&#x27;$&#x27;</span>)[<span class="hljs-number">1</span>], os.path.join(directory, <span class="hljs-built_in">str</span>(i + <span class="hljs-number">1</span>) + <span class="hljs-string">&#x27;.mp4&#x27;</span>).strip())<br>        print(<span class="hljs-string">&#x27;成功下载第%d集&#x27;</span> % (i + <span class="hljs-number">1</span>))<br>    <br>    os.system(<span class="hljs-string">&#x27;pause&#x27;</span>)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>实用工具</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>网页爬虫</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>三角恒等变换</title>
    <link href="/posts/ed79c1d6/"/>
    <url>/posts/ed79c1d6/</url>
    
    <content type="html"><![CDATA[<h1 id="倒数关系"><a href="#倒数关系" class="headerlink" title="倒数关系"></a>倒数关系</h1><script type="math/tex; mode=display">\begin{align}\sin \alpha \cdot \csc \alpha &= 1 \\\\\cos \alpha \cdot \sec \alpha &= 1 \\\\\tan \alpha \cdot \cot \alpha &= 1\end{align}</script><h1 id="商数关系"><a href="#商数关系" class="headerlink" title="商数关系"></a>商数关系</h1><script type="math/tex; mode=display">\frac{\sin \alpha}{\cos \alpha} = \tan \alpha = \frac{\sec \alpha}{\csc \alpha} = \frac{1}{\cot \alpha}</script><h1 id="平方关系"><a href="#平方关系" class="headerlink" title="平方关系"></a>平方关系</h1><script type="math/tex; mode=display">\begin{align}\sin^2 \alpha + \cos^2 \alpha &= 1 \\\\\sec^2 \alpha - \tan^2 \alpha &= 1 \\\\\csc^2 \alpha - \cot^2 \alpha &= 1\end{align}</script><h1 id="诱导公式"><a href="#诱导公式" class="headerlink" title="诱导公式"></a>诱导公式</h1><ul><li><strong>奇变偶不变，符号看象限</strong></li></ul><h2 id="第一组"><a href="#第一组" class="headerlink" title="第一组"></a>第一组</h2><script type="math/tex; mode=display">\begin{align}\sin(2k\pi + \alpha) &= -\sin \alpha \\\\\cos(2k\pi + \alpha) &= -\cos \alpha \\\\\tan(2k\pi + \alpha) &= \tan \alpha \\\\k \in Z\end{align}</script><h2 id="第二组"><a href="#第二组" class="headerlink" title="第二组"></a>第二组</h2><script type="math/tex; mode=display">\begin{align}\sin(-\alpha) &= -\sin \alpha \\\\\cos(-\alpha) &= \cos \alpha  \\\\\tan(-\alpha) &= -\tan \alpha\end{align}</script><h2 id="第三组"><a href="#第三组" class="headerlink" title="第三组"></a>第三组</h2><script type="math/tex; mode=display">\begin{align}\sin(\pi + \alpha) &= -\sin \alpha \\\\\cos(\pi + \alpha) &= -\cos \alpha \\\\\tan(\pi + \alpha) &= \tan \alpha\end{align}</script><h2 id="第四组"><a href="#第四组" class="headerlink" title="第四组"></a>第四组</h2><script type="math/tex; mode=display">\begin{align}\sin(\pi - \alpha) &= \sin \alpha  \\\\\cos(\pi - \alpha) &= -\cos \alpha \\\\\tan(\pi - \alpha) &= -\tan \alpha\end{align}</script><h2 id="第五组"><a href="#第五组" class="headerlink" title="第五组"></a>第五组</h2><script type="math/tex; mode=display">\begin{align}\sin(\frac{\pi}{2} - \alpha) &= \cos \alpha \\\\\cos(\frac{\pi}{2} - \alpha) &= \sin \alpha \\\\\tan(\frac{\pi}{2} - \alpha) &= \cot \alpha\end{align}</script><h2 id="第六组"><a href="#第六组" class="headerlink" title="第六组"></a>第六组</h2><script type="math/tex; mode=display">\begin{align}\sin(\frac{\pi}{2} + \alpha) &= \cos \alpha  \\\\\cos(\frac{\pi}{2} + \alpha) &= -\sin \alpha \\\\\tan(\frac{\pi}{2} + \alpha) &= -\cot \alpha\end{align}</script><h1 id="和差角"><a href="#和差角" class="headerlink" title="和差角"></a>和差角</h1><script type="math/tex; mode=display">\begin{align}\sin(\alpha + \beta) &= \sin \alpha \cos \beta + \cos \alpha \sin \beta \\\\\sin(\alpha - \beta) &= \sin \alpha \cos \beta - \cos \alpha \sin \beta \\\\\cos(\alpha + \beta) &= \cos \alpha \cos \beta - \sin \alpha \sin \beta \\\\\cos(\alpha - \beta) &= \cos \alpha \cos \beta + \sin \alpha \sin \beta \\\\\tan(\alpha + \beta) &= \frac{\tan \alpha + \tan \beta}{1 - \tan \alpha \tan \beta} \\\\\tan(\alpha - \beta) &= \frac{\tan \alpha - \tan \beta}{1 + \tan \alpha \tan \beta}\end{align}</script><h1 id="倍角"><a href="#倍角" class="headerlink" title="倍角"></a>倍角</h1><h2 id="二倍角"><a href="#二倍角" class="headerlink" title="二倍角"></a>二倍角</h2><script type="math/tex; mode=display">\begin{align}\sin 2\alpha &= 2\sin \alpha \cos \alpha \\\\\cos 2\alpha &= \cos^2 \alpha - \sin^2 \alpha \\\\             &= 2\cos^2 \alpha - 1 \\\\             &= 1 - 2\sin^2 \alpha \\\\\tan 2\alpha &= \frac{2\tan \alpha}{1 - \tan^2 \alpha}\end{align}</script><h2 id="三倍角"><a href="#三倍角" class="headerlink" title="三倍角"></a>三倍角</h2><script type="math/tex; mode=display">\begin{align}\sin 3\alpha &= -4\sin^3 \alpha + 3\sin \alpha \\\\\cos 3\alpha &= 4\cos^3 \alpha - 3\cos \alpha \\\\\tan 3\alpha &= \frac{3\tan \alpha - \tan^3 \alpha}{1 - 3\tan^2 \alpha}\end{align}</script><h1 id="半角公式-降幂公式"><a href="#半角公式-降幂公式" class="headerlink" title="半角公式/降幂公式"></a>半角公式/降幂公式</h1><script type="math/tex; mode=display">\begin{align}\sin^2 \alpha &= \frac{1 - \cos 2\alpha}{2} \\\\\cos^2 \alpha &= \frac{1 + \cos 2\alpha}{2} \\\\\tan^2 \alpha &= \frac{1 - \cos 2\alpha}{1 + \cos 2\alpha} \\\\\tan \alpha &= \frac{sin 2\alpha}{1 + \cos 2\alpha} \\\\            &= \frac{1 - \cos 2\alpha}{sin 2\alpha}\end{align}</script><h1 id="升幂公式"><a href="#升幂公式" class="headerlink" title="升幂公式"></a>升幂公式</h1><script type="math/tex; mode=display">\begin{align}1 + \cos 2\alpha &= 2\cos^2 \alpha \\\\1 - \cos 2\alpha &= 2\sin^2 \alpha\end{align}</script><h1 id="积化和差"><a href="#积化和差" class="headerlink" title="积化和差"></a>积化和差</h1><script type="math/tex; mode=display">\begin{align}\sin \alpha \cos \beta &= \frac{1}{2}(\sin(\alpha + \beta) + \sin(\alpha - \beta)) \\\\\cos \alpha \sin \beta &= \frac{1}{2}(\sin(\alpha + \beta) - \sin(\alpha - \beta)) \\\\\cos \alpha \cos \beta &= \frac{1}{2}(\cos(\alpha + \beta) + \cos(\alpha - \beta)) \\\\\sin \alpha \sin \beta &= -\frac{1}{2}(\cos(\alpha + \beta) - \cos(\alpha - \beta))\end{align}</script><h1 id="和差化积"><a href="#和差化积" class="headerlink" title="和差化积"></a>和差化积</h1><script type="math/tex; mode=display">\begin{align}\sin \alpha + \sin \beta &= 2\sin \frac{\alpha + \beta}{2} \ cos \frac{\alpha - \beta}{2} \\\\\sin \alpha - \sin \beta &= 2\cos \frac{\alpha + \beta}{2} \ sin \frac{\alpha - \beta}{2} \\\\\cos \alpha + \cos \beta &= 2\cos \frac{\alpha + \beta}{2} \ cos \frac{\alpha - \beta}{2} \\\\\cos \alpha - \cos \beta &= -2\sin \frac{\alpha + \beta}{2} \ sin \frac{\alpha - \beta}{2}\end{align}</script><h1 id="万能置换公式"><a href="#万能置换公式" class="headerlink" title="万能置换公式"></a>万能置换公式</h1><script type="math/tex; mode=display">\begin{align}\sin \alpha &= \frac{2\tan \frac{\alpha}{2}}{1 + \tan^2 \frac{\alpha}{2}} \\\\\cos \alpha &= \frac{1 - \tan^2 \frac{\alpha}{2}}{1 + \tan^2 \frac{\alpha}{2}} \\\\\tan \alpha &= \frac{2\tan \frac{\alpha}{2}}{1 - \tan^2 \frac{\alpha}{2}}\end{align}</script><h1 id="辅助角公式"><a href="#辅助角公式" class="headerlink" title="辅助角公式"></a>辅助角公式</h1><script type="math/tex; mode=display">\begin{align}a\sin \alpha + b\cos \alpha = \sqrt{a^2 + b^2} \sin(\alpha + \varphi) \\\\\text{其中} \cos \varphi = \frac{a}{\sqrt{a^2 + b^2}}, \sin \varphi = \frac{b}{\sqrt{a^2 + b^2}}\end{align}</script><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><script type="math/tex; mode=display">\begin{align}\tan \alpha + \frac{1}{\tan \alpha} = \frac{2}{\sin 2\alpha}  \\\\\tan \alpha - \frac{1}{\tan \alpha} = -\frac{2}{\tan 2\alpha} \\\\|{\sin(n\theta)}| < n|{\sin \theta}|,\ (n \in N^+)\end{align}</script>]]></content>
    
    
    <categories>
      
      <category>高考</category>
      
      <category>数学</category>
      
    </categories>
    
    
    <tags>
      
      <tag>三角恒等式</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
